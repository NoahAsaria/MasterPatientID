04/12/2020 02:22:21 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/12/2020 02:22:21 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/12/2020 02:22:22 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/12/2020 02:22:22 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[37mGET /static/styles/scripts.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[37mGET /static/styles/styles.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[33mGET /apple-touch-icon-precomposed.png HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[33mGET /favicon.ico HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/12/2020 02:22:39 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:22:39] "[33mGET /apple-touch-icon.png HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/12/2020 02:33:30 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/12/2020 02:33:30 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/12/2020 02:33:31 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/12/2020 02:33:31 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/12/2020 02:33:36 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:33:36] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:33:36 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:33:36] "[37mGET /static/styles/scripts.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:33:45 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:33:45] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:33:45 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11901bcc8> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:33:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:33:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:33:45 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:33:45 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:33:45 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:33:45 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:33:45 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:33:45 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:33:45 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:33:45] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:34:45 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:34:45] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:34:45 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1190b3048> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:34:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:34:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:34:45 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:34:45 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:34:45 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:34:45 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:34:45 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:34:45 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:34:45 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:34:45] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:02 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:02] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:02 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:02] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:31 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:31] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:31 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:31] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:31 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:31] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:37 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:37] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:37 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11905ff48> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:36:37 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:36:37 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:36:37 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:36:37 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:36:37 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:37 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:36:37 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:36:37 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:36:37 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:37] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:56 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:56] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:36:56 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1190a3098> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:36:56 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:36:56 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:36:56 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:36:56 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:36:56 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:36:56 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:36:56 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:36:56 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:36:56 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:36:56] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:37:02 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:37:02] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:37:02 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1194cb188> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:37:02 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:37:02 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:37:02 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:37:02 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:37:02 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:37:02 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:37:02 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:37:02 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:37:02 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:37:02] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:38:35 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:38:35] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:38:35 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119358138> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:38:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:38:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:38:35 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:38:35 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:38:35 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:38:35 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:38:35 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:38:35 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:38:35 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:38:35] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:24 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:27 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:27] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:39:27 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119069048> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:39:27 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:39:27 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:39:27 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:39:27 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:39:27 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:39:27 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:39:27 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:39:27 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:39:27 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:39:27] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:04 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:04] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:04 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1192998b8> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:40:04 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:40:05 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:40:05 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:40:05 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:40:05 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:05 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:05 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:05 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:40:05 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:05] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:18 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/12/2020 02:40:18 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/12/2020 02:40:19 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/12/2020 02:40:19 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/12/2020 02:40:21 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:21] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:21 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:21] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:21 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:21] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:25 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:25] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:25 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11911c318> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:40:25 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:40:25 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:40:25 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:40:25 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:40:25 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:25 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:25 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:25 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:40:25 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:25] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:38 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:38] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:38 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1191ad188> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:40:38 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:40:38 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:40:38 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:40:38 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:40:38 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:40:38 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:38 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:40:38 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:40:38 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:38] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:54 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:54] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:40:54 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:40:54] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:41:00 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:41:00] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/12/2020 02:41:00 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11930e098> @ ParserClass.py : getRoot: --> line 43
04/12/2020 02:41:00 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/12/2020 02:41:00 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/12/2020 02:41:00 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/12/2020 02:41:00 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/12/2020 02:41:00 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:41:00 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:41:00 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/12/2020 02:41:00 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/12/2020 02:41:00 PM: INFO: 127.0.0.1 - - [12/Apr/2020 14:41:00] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:18 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:19:18 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:19:19 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:19:19 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:19:21 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:21] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:21 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:21] "[37mGET /static/styles/styles.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:21 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:21] "[37mGET /static/styles/scripts.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:21 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:21] "[33mGET /apple-touch-icon-precomposed.png HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:21 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:21] "[33mGET /apple-touch-icon.png HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:29 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:29] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:29 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ef7778> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:19:29 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:19:29 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:19:29 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:19:29 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:19:29 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDict: --> line 200
04/19/2020 01:19:29 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDict: --> line 203
04/19/2020 01:19:29 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDict: --> line 203
04/19/2020 01:19:29 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDict: --> line 206
04/19/2020 01:19:29 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:29] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:38 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:38] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:19:38 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:19:38 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:19:38 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:19:38 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:19:38 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:19:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:19:38 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:19:38 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:19:38 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:19:38 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:19:38 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:19:38 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:19:38 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:19:38 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:19:38 AM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/19/2020 01:19:38 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:19:38 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:19:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:19:38 AM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:19:38 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/19/2020 01:19:38 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/19/2020 01:19:38 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/19/2020 01:19:38 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:19:38 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:19:38 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:19:38 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:19:38 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:19:38 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:19:38 AM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/19/2020 01:19:38 AM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/19/2020 01:19:38 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.938-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.050-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.156-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.239-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/19/2020 01:19:38 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 01:19:38 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 01:19:38 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 01:19:38 AM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 01:19:38 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 01:19:38 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 01:19:38 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.938-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 01:19:38 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 01:19:38 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 01:19:38 AM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 01:19:38 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 01:19:38 AM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 01:19:38 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.050-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 01:19:38 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 01:19:38 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 01:19:38 AM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 01:19:38 AM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 01:19:38 AM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 01:19:38 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.156-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 01:19:38 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 01:19:38 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 01:19:38 AM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 01:19:38 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 01:19:38 AM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 01:19:38 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.239-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 01:19:38 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 01:19:38 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 01:19:38 AM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 01:19:38 AM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 01:19:38 AM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 01:19:38 AM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/19/2020 01:19:38 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/19/2020 01:19:38 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/19/2020 01:19:38 AM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/19/2020 01:19:38 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:19:38] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:20:10 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:20:10 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:20:11 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:20:11 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:22:03 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:22:03 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:29:02 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:29:02 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:29:03 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:29:03 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:29:04 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:29:04] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:29:05 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:29:05] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:29:05 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:29:05] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:29:12 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:29:12] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:29:12 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118fd4908> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:29:12 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:29:12 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:29:12 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:29:12 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:29:12 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:29:12 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:29:12 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:29:12 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:29:12 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:29:12 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:29:12 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:29:12 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:29:12] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:30:08 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:30:08 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:30:57 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:30:57 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:30:57 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:30:57 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:31:00 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:00] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:00 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:00] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:00 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:00] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:06 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:06] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:06 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ed1ef8> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:31:06 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:31:06 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:31:06 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:31:06 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:31:06 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:31:06 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:31:06 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:31:06 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:06 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:31:06 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:31:06 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[35m[1mPOST / HTTP/1.1[0m" 500 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:07 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:07] "[37mGET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:31 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:31:31 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:31:32 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:31:32 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:31:40 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:31:40 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:31:42 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:31:42 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:31:44 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:44] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:44 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:44] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:44 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:44] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11969fae8> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:31:50 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:31:50 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:31:50 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:31:50 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:31:50 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:31:50 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:31:50 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:31:50 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:31:50 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:31:50 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:31:50 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[35m[1mPOST / HTTP/1.1[0m" 500 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mGET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:31:50 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:31:50] "[37mGET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:08 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:32:08 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:32:10 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:32:10 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:32:11 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:32:11 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:32:11 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:32:11 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:32:12 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:32:12] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:12 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:32:12] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:12 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:32:12] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:18 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:32:18] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118feed68> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:32:18 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:32:18 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:32:18 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:32:18 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:32:18 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:32:18 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:32:18 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:32:18 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:32:18 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:32:18 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:32:18 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:32:18 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:32:18] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:32:39 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:32:39 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:32:40 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:32:40 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:34:24 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:34:24 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:34:25 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:34:25 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:34:26 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:34:26] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:34:33 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:34:33] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:34:33 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118fda778> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:34:33 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:34:33 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:34:33 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:34:33 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:34:33 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:34:33 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:34:33 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:34:33 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:34:33 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:34:33 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:34:33 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:34:33 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:34:33] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:06 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:35:06 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:35:06 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:35:06 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:35:08 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:35:08 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:35:09 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:35:09 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:35:09 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:09] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:09 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:09] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:09 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:09] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:14 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:14] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ecf598> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:35:15 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:35:15 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:35:15 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:35:15 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:35:15 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:35:15 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:35:15 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:35:15 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:15 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:35:15 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:35:15 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[35m[1mPOST / HTTP/1.1[0m" 500 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[37mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[37mGET /?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[37mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[37mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:15 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:15] "[37mGET /?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:26 AM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/19/2020 01:35:26 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:35:27 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:35:27 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:35:32 AM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/19/2020 01:35:32 AM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/19/2020 01:35:33 AM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/19/2020 01:35:33 AM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/19/2020 01:35:33 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:33] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:34 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:34] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:34 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:34] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:41 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:41] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/19/2020 01:35:41 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ed2688> @ ParserClass.py : getRoot: --> line 43
04/19/2020 01:35:41 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:35:41 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:35:41 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:35:41 AM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/19/2020 01:35:41 AM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/19/2020 01:35:42 AM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/19/2020 01:35:42 AM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/19/2020 01:35:42 AM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/19/2020 01:35:42 AM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:35:42 AM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/19/2020 01:35:42 AM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/19/2020 01:35:42 AM: INFO: 127.0.0.1 - - [19/Apr/2020 01:35:42] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:00 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 12:20:00 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 12:20:01 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 12:20:01 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 12:20:06 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:06] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:06 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:06] "[37mGET /static/styles/styles.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:06 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:06] "[36mGET /static/styles/scripts.js HTTP/1.1[0m" 304 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:08 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:08] "[33mGET /favicon.ico HTTP/1.1[0m" 404 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:10 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:10] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:16 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:16] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:16 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ef36d8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 12:20:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 12:20:16 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 12:20:16 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 12:20:16 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 12:20:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 12:20:16 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 12:20:16 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 12:20:16 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:20:16 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 12:20:16 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 12:20:16 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 12:20:16 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:20:16] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:20:29 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 12:20:29 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 12:20:30 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 12:20:30 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 12:21:49 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 12:21:49 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 12:21:50 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 12:21:50 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 12:22:11 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 12:22:11 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 12:22:12 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 12:22:12 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 12:23:11 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:11] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:11 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:11] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:11 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:11] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:19 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:19] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:19 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ed4868> @ ParserClass.py : getRoot: --> line 43
04/20/2020 12:23:19 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 12:23:19 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 12:23:19 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 12:23:19 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 12:23:19 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 12:23:19 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 12:23:19 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 12:23:19 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 12:23:19 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 12:23:19 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 12:23:19 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 12:23:19 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:19] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:22 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:22] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 12:23:22 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 12:23:22 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 12:23:22 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 12:23:22 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 12:23:22 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 12:23:22 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 12:23:22 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 12:23:22 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 12:23:22 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 12:23:22 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 12:23:22 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 12:23:22 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 12:23:22 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 12:23:22 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 12:23:22 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 12:23:22 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 12:23:22 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 12:23:22 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 12:23:22 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 12:23:22 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 12:23:22 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 12:23:22 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 12:23:22 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 12:23:22 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 12:23:22 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 12:23:22 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 12:23:22 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 12:23:22 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 12:23:22 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 12:23:22 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 12:23:22 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 12:23:22 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 12:23:22 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 12:23:22 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 12:23:22 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 12:23:22 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 12:23:22 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 12:23:22 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 12:23:22 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 12:23:22 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 12:23:22 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 12:23:22 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 12:23:22 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 12:23:22 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 12:23:22 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 12:23:22 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 12:23:22 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 12:23:22 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 12:23:22 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 12:23:22 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 12:23:22 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 12:23:22 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 12:23:22 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 12:23:22 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 12:23:22 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 12:23:22 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 12:23:22 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 12:23:22 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 12:23:22 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 12:23:22 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 12:23:22 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 12:23:22 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 12:23:22 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 12:23:22 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 12:23:22 PM: INFO: 127.0.0.1 - - [20/Apr/2020 12:23:22] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:07:57 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 01:07:57 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:07:58 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:07:58 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:08:01 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 01:08:01 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:08:01 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:08:01 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:08:04 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:08:04] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:08:10 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:08:10] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:08:10 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1186cef98> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:08:10 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:08:10 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:08:10 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:08:10 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:08:10 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:08:10 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:08:10 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:08:10 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:08:10 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:08:10 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:08:10 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:08:10 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:08:10] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:08:15 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:08:15] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:08:15 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:08:15 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:08:15 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:08:15 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:08:15 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:08:15 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:08:15 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:08:15 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:08:15 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:08:15 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:08:15 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:08:15 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:08:15 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:08:15 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:08:15 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 01:08:15 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:08:15 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:08:15 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:08:15 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:08:15 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 01:08:15 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 01:08:15 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/20/2020 01:08:15 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 01:08:15 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:08:15 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:08:15 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:08:15 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:08:15 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:08:15 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 01:08:15 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 01:08:15 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 01:08:15 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 01:08:15 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:08:15 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:08:15 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:08:15 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:08:15 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:08:15 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:08:15 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:08:15 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:08:15 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:08:15 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:08:15 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:08:15 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:08:15 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 01:08:15 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 01:08:15 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 01:08:15 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 01:08:15 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:08:15] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:11:13 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 01:11:13 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:11:13 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:11:13 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:11:50 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 01:11:50 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:11:51 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:11:51 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:12:51 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 01:12:51 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:12:51 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:12:51 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:15:08 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 01:15:08 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:24:00 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 01:24:00 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 01:24:01 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 01:24:01 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 01:24:03 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:03] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:03 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:03] "[37mGET /static/styles/styles.css HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:03 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:03] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:03 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:03] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:12 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:12] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:12 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118fcf728> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:24:12 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:12 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:12 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:12 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:24:12 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:12 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:12 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:12 PM: INFO: Field given is in list format, returning Mary @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field family is in list format, returning Grant @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field address is in list format, returning No Address Indicated @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field city is in list format, returning No City Indicated @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field state is in list format, returning CA @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field postalcode is in list format, returning 99999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:12 PM: INFO: Field birthtime is not a list, returning 19870321 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:12 PM: INFO: Field gender is not a list, returning Female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:12 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:24:12 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:12] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:18 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:18] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:18 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119012868> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:24:18 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:18 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:18 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:18 PM: DEBUG: Demographics dictionary parsed: {'given': ['TWOTEST'], 'family': ['BWHCKDRISKTEST'], 'address': ['2324 MAIN STREET'], 'city': ['BOSTON'], 'state': ['MA'], 'postalcode': ['02109'], 'birthtime': '19540202', 'gender': 'Male'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:24:18 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:19 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:19 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:19 PM: INFO: Field given is in list format, returning TWOTEST @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field family is in list format, returning BWHCKDRISKTEST @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field address is in list format, returning 2324 MAIN STREET @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field city is in list format, returning BOSTON @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field state is in list format, returning MA @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field postalcode is in list format, returning 02109 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:19 PM: INFO: Field birthtime is not a list, returning 19540202 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:19 PM: INFO: Field gender is not a list, returning Male @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:19 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:24:19 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:19] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:25 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:25] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:25 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1190af598> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:24:25 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:25 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:25 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:25 PM: DEBUG: Demographics dictionary parsed: {'given': ['MILLER'], 'family': ['DEMO'], 'address': ['26 N. Martin Street'], 'city': ['Los Angeles'], 'state': ['CA'], 'postalcode': ['90005'], 'birthtime': '19471010', 'gender': 'Male'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:24:25 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:25 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:25 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:25 PM: INFO: Field given is in list format, returning MILLER @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field family is in list format, returning DEMO @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field address is in list format, returning 26 N. Martin Street @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field city is in list format, returning Los Angeles @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field state is in list format, returning CA @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field postalcode is in list format, returning 90005 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:25 PM: INFO: Field birthtime is not a list, returning 19471010 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:25 PM: INFO: Field gender is not a list, returning Male @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:25 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:24:25 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:25] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:30] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:30 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119498e08> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:24:30 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:30 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:30 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:30 PM: DEBUG: Demographics dictionary parsed: {'given': ['Data', '6'], 'family': ['Export6'], 'address': ['1234 Test ', None], 'city': ['Covington'], 'state': ['GA'], 'postalcode': ['300147'], 'birthtime': '20001020', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:24:30 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:30 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:30 PM: INFO: {'allergies': [], 'immunizations': [], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:30 PM: INFO: Field given is in list format, returning Data @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field family is in list format, returning Export6 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field address is in list format, returning 1234 Test  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field city is in list format, returning Covington @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field state is in list format, returning GA @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field postalcode is in list format, returning 300147 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:30 PM: INFO: Field birthtime is not a list, returning 20001020 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:30 PM: INFO: Field gender is not a list, returning Female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:30 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:24:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:30] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:35 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:35] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:35 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119052ea8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:24:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:35 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate'], 'immunizations': ['Influenza, seasonal, injectable'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:35 PM: DEBUG: Demographics dictionary parsed: {'given': ['Adam'], 'family': ['Everyman'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19621022', 'gender': 'Male'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:24:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:24:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:24:35 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate'], 'immunizations': ['Influenza, seasonal, injectable'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:24:35 PM: INFO: Field given is in list format, returning Adam @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field family is in list format, returning Everyman @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field address is in list format, returning No Address Indicated @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field city is in list format, returning No City Indicated @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field state is in list format, returning CA @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field postalcode is in list format, returning 99999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:24:35 PM: INFO: Field birthtime is not a list, returning 19621022 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:35 PM: INFO: Field gender is not a list, returning Male @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:24:35 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:24:35 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:35] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:38 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:24:38 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:38] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:38 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:24:38 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:24:38 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:24:38 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:24:38 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:24:38 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:24:38 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:24:38 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:24:38 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:24:38 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:24:38 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:24:38 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:24:38 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:24:38 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 01:24:38 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:24:38 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:24:38 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:24:38 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:24:38 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:24:38 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:24:38 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:24:38 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:24:38 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:24:38 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:24:38 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:24:38 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 01:24:38 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 01:24:38 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 01:24:38 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 01:24:38 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:38 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:38 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:38 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:38 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:38 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:38 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:38 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:38 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:38 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:38 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:38 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:38 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:38 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:38 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:38 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:38 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:38 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:38 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:38 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:38 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:38 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:38 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:38 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:38 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:38 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:38 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:38 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:38 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:38 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:38 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 01:24:38 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 01:24:38 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 01:24:38 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 01:24:38 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:38] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:50 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:50] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:58 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:58] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:24:58 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:24:58 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:24:58 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:24:58 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:24:58 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:24:58 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:24:58 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:24:58 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:24:58 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:24:58 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:24:58 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:24:58 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:24:58 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:24:58 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:24:58 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 01:24:58 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:24:58 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:24:58 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:24:58 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:24:58 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:24:58 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:24:58 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:24:58 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:24:58 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:24:58 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:24:58 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:24:58 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 01:24:58 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 01:24:58 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 01:24:58 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 01:24:58 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:58 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:58 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:58 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:58 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:58 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:58 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:58 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:58 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:58 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:58 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:58 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:58 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:58 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:58 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:58 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:58 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:58 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:58 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:58 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:58 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:58 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:58 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:58 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:58 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:24:58 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:24:58 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:24:58 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:24:58 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:24:58 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:24:58 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 01:24:58 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 01:24:58 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 01:24:58 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 01:24:58 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:24:58] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:25:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:25:30] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:25:40 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:25:40] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:25:40 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1190128b8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 01:25:40 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:25:40 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:25:40 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:25:40 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 01:25:40 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 01:25:40 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 01:25:40 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 01:25:40 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 01:25:40 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:25:40 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 01:25:40 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 01:25:40 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:25:40] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:25:48 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:25:48 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:25:48 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:25:48] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 01:25:48 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:25:48 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:25:48 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:25:48 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:25:48 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:25:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:25:48 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:25:48 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:25:48 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:25:48 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:25:48 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:25:48 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:25:48 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 01:25:48 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:25:48 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:25:48 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:25:48 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:25:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:25:48 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:25:48 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:25:48 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:25:48 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:25:48 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:25:48 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:25:48 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 01:25:48 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 01:25:48 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 01:25:48 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 01:25:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:25:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:25:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:25:48 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:25:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:25:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:25:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:25:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:25:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:25:48 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:25:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:25:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:25:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:25:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:25:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:25:48 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:25:48 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:25:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:25:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:25:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:25:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:25:48 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:25:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:25:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:25:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 01:25:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 01:25:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 01:25:48 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 01:25:48 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 01:25:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 01:25:48 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 01:25:48 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 01:25:48 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 01:25:48 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 01:25:48 PM: INFO: 127.0.0.1 - - [20/Apr/2020 13:25:48] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:04 PM: DEBUG: Starting new HTTP connection (1): rxnav.nlm.nih.gov:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:17:05 PM: DEBUG: http://rxnav.nlm.nih.gov:80 "GET /REST/rxcui?name=ASPIRIN HTTP/1.1" 302 0 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:17:05 PM: DEBUG: Starting new HTTPS connection (1): rxnav.nlm.nih.gov:443 @ connectionpool.py : _new_conn: --> line 959
04/20/2020 03:17:05 PM: DEBUG: https://rxnav.nlm.nih.gov:443 "GET /REST/rxcui?name=ASPIRIN HTTP/1.1" 200 144 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:17:05 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 03:17:05 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:17:06 PM: DEBUG: Starting new HTTP connection (1): rxnav.nlm.nih.gov:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:17:24 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 03:17:24 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:17:25 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:17:25 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 03:17:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:17:28] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:17:28] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:17:33] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:33 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ed47c8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 03:17:33 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:17:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:17:33 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:17:33 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 03:17:33 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:17:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:17:33 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:17:33 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:17:33 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:17:33 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:17:33 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 03:17:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:17:33] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:17:39] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:17:39 PM: DEBUG: Starting new HTTP connection (1): rxnav.nlm.nih.gov:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:18:55 PM: DEBUG: http://rxnav.nlm.nih.gov:80 "GET /REST/rxcui?name=Bicillin%20L-A HTTP/1.1" 302 0 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:18:55 PM: DEBUG: Starting new HTTPS connection (1): rxnav.nlm.nih.gov:443 @ connectionpool.py : _new_conn: --> line 959
04/20/2020 03:20:11 PM: DEBUG: https://rxnav.nlm.nih.gov:443 "GET /REST/rxcui?name=Bicillin%20L-A HTTP/1.1" 200 151 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:20:11 PM: DEBUG: Starting new HTTP connection (1): rxnav.nlm.nih.gov:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:21:28 PM: DEBUG: http://rxnav.nlm.nih.gov:80 "GET /REST/rxcui?name=Codeine%20Phosphate HTTP/1.1" 302 0 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:21:28 PM: DEBUG: Starting new HTTPS connection (1): rxnav.nlm.nih.gov:443 @ connectionpool.py : _new_conn: --> line 959
04/20/2020 03:22:44 PM: DEBUG: https://rxnav.nlm.nih.gov:443 "GET /REST/rxcui?name=Codeine%20Phosphate HTTP/1.1" 200 154 @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:22:44 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 03:22:44 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 03:22:44 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 03:22:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 03:22:44 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:22:44 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:22:44 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:22:44 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 03:22:44 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 03:22:44 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:22:44 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 03:22:44 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 03:22:44 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 03:22:44 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 03:22:44 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female', 'address': '534 Erewhon St', 'city': 'PleasantVilles ', 'state': 'Vic'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 03:22:44 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 03:22:44 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:22:44 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:22:44 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female'), ('address', '534 Erewhon St'), ('city', 'PleasantVilles '), ('state', 'Vic')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:22:44 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:22:44 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:22:44 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female&address=534 Erewhon St& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:22:44 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female&address=534 Erewhon St&city=PleasantVilles & @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:22:44 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female&address=534 Erewhon St&city=PleasantVilles &state=Vic& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:22:44 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/20/2020 03:22:44 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female&address=534 Erewhon St&city=PleasantVilles &state=Vic @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 03:22:44 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female&address=534 Erewhon St&city=PleasantVilles &state=Vic @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:22:44 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 03:22:44 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 03:22:44 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:22:45 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female&address=534%20Erewhon%20St&city=PleasantVilles%20&state=Vic HTTP/1.1" 400 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:22:45 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 03:22:45 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 03:22:45 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 03:22:45 PM: DEBUG: Patient entries:  @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 03:22:45 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 03:22:45 PM: DEBUG: patientDictionaries: {} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 03:22:45 PM: DEBUG: patientDictionaries: {} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 03:22:45 PM: DEBUG: Number of patient entries from GET Response: 0 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 03:22:45 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:22:45] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:24:46 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/RXLookup.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 03:24:46 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:26:28 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 03:26:28 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:26:29 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:26:29 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 03:26:31 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:26:31] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:26:38 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:26:38] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:26:38 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ecb688> @ ParserClass.py : getRoot: --> line 43
04/20/2020 03:26:38 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:26:38 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:26:38 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:26:38 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 03:26:38 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:26:38 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:26:38 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:26:38 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:26:38 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:26:38 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:26:38 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 03:26:38 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:26:38] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:26:42 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 03:26:42 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 03:26:42 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 03:26:42 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 03:26:42 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:26:42 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:26:42 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:26:42 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 03:26:42 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:26:42] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:26:42 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 03:26:42 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:26:42 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 03:26:42 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 03:26:42 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 03:26:42 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 03:26:42 PM: DEBUG: Setting identifiers dictionary as {'given': 'Neela', 'family': 'SIIM'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 03:26:42 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 03:26:42 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:26:42 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:26:42 PM: DEBUG: identifiersDict.items(): dict_items([('given', 'Neela'), ('family', 'SIIM')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:26:42 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?given=Neela& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:26:42 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?given=Neela&family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/20/2020 03:26:42 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/20/2020 03:26:42 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?given=Neela&family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 03:26:42 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?given=Neela&family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:26:42 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 03:26:42 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 03:26:42 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:26:42 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?given=Neela&family=SIIM HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:26:42 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 03:26:42 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 03:26:42 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 03:26:42 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 03:26:42 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:26:42 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:26:42 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:26:42 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:26:42 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:26:42 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:26:42 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 03:26:42 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 03:26:42 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 03:26:42 PM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 03:26:42 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:26:42] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:26:57 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/RXLookup.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 03:26:57 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:26:57 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:26:57 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 03:55:25 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 03:55:25 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:55:26 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:55:26 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 03:55:26 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:55:26] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:55:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:55:33] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:55:33 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ed5048> @ ParserClass.py : getRoot: --> line 43
04/20/2020 03:55:33 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:55:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:55:33 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:55:33 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 03:55:33 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 03:55:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 03:55:33 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 03:55:33 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 03:55:33 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:55:33 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 03:55:33 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 03:55:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:55:33] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:55:36 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 03:55:36 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 03:55:36 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:55:36] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:55:36 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 03:55:36 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 03:55:36 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:55:36 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:55:36 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:55:36 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:55:36 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 03:55:36 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 03:55:36 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 03:55:36 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 03:55:36 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 03:55:36 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 03:55:36 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 03:55:36 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 03:55:36 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 03:55:36 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 03:55:36 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 03:55:36 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 03:55:36 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 03:55:36 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 03:55:36 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 138
04/20/2020 03:55:36 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 03:55:39 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 03:55:39 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 03:55:39 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 146
04/20/2020 03:55:39 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 03:55:39 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 03:55:39 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 03:55:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:55:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:55:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:55:39 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:55:39 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:55:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:55:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:55:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:55:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:55:39 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:55:39 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:55:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:55:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:55:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:55:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:55:39 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:55:39 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:55:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:55:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:55:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:55:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:55:39 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:55:39 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:55:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:55:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 03:55:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 03:55:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 03:55:39 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 03:55:39 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 03:55:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 03:55:39 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 03:55:39 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 03:55:39 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 03:55:39 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 03:55:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 15:55:39] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 03:56:42 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 03:56:42 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:56:43 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:56:43 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 03:56:51 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 03:56:51 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 03:56:52 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 03:56:52 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:00:26 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:00:26 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:00:27 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:00:27 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:02:34 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:02:34 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:02:35 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:02:35 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:02:56 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:02:56 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:02:57 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:02:57 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:12:40 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:12:40 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:12:40 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:12:40 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:12:48 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:12:48 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:12:49 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:12:49 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:13:06 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:13:06 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:13:07 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:13:07 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:13:18 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:13:18 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:13:19 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:13:19 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:13:38 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:13:38 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:13:39 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:13:39 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:13:45 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:13:45 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:13:46 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:13:46 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:13:57 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:13:58 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:13:58 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:13:58 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:14:19 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:14:19 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:14:20 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:14:20 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:14:46 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:14:46 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:14:47 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:14:47 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:14:52 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:14:52 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:14:53 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:14:53 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:15:03 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:15:03 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:15:04 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:15:04 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:15:20 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:15:20 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:15:20 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:15:20 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:15:31 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:15:31 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:15:32 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:15:32 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:16:41 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:16:41 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:16:42 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:16:42 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:16:55 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:16:55 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:16:56 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:16:56 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:17:41 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:17:41 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:17:42 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:17:42 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:17:50 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:17:50 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:17:51 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:17:51 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:18:08 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:18:09 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:18:09 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:18:09 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:18:19 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:18:19 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:18:19 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:18:19 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:18:49 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/HTTPRequestClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:18:49 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:18:50 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:18:50 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:21:53 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:21:53 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:21:54 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:21:54 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:22:07 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:22:07] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:22:16 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:22:16] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:22:16 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118edc778> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:22:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:22:16 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:22:16 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:22:16 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:22:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:22:16 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:22:16 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:22:16 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:22:16 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:22:16 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:22:16 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:22:16 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:22:16] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:22:26 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:22:26] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:22:26 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:22:26 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:22:26 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:22:26 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:22:26 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:22:26 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:22:26 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:22:26 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:22:26 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:22:26 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:22:26 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:22:26 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:22:26 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:22:26 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:22:26 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:22:26 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:22:26 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:22:26 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:22:26 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:22:26 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:22:26 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:22:26 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:22:26 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:22:26 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:22:26 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:22:26 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:22:26 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:22:26 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:22:26 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:22:26 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:22:26 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:22:26 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:22:26 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:22:26 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:22:26 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:22:26 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:22:26 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:22:26 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:22:26 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:22:26 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:22:26 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:22:26 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:22:26 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:22:26 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:22:26 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:22:26 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:22:26 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:22:26 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:22:26 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:22:26 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:22:26 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:22:26 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:22:26 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:22:26 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:22:26 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:22:26 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:22:26 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:22:26 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:22:26 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:22:26 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:22:26 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:22:26 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:22:26 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:22:26 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:22:26 PM: DEBUG: Setting identifiers dictionary as {'code': ['2672', '1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:22:26 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:22:26 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:22:26 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['2672', '1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:22:26 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:22:26 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:22:26 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:22:26 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:22:26 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:22:26 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:22:26 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:22:26 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=2672&code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:22:26 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:22:26 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:22:26 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:22:26 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['2672', '1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:22:26 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:22:26 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:22:26 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:22:26 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=2672&code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:22:26 PM: DEBUG: Number of patient entries from GET Response: 5 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:22:26 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:22:26] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:23:29 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:23:29] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:23:29 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118f34098> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:23:29 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:23:29 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:23:29 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:23:29 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:23:29 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:23:29 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:23:30 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:23:30 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:23:30 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:23:30 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:23:30 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:23:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:23:30] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:23:32 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:23:32 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:23:32] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:23:32 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:23:32 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:23:32 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:23:32 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:23:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:23:32 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:23:32 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:23:32 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:23:32 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:23:32 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:23:32 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:23:32 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:23:32 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:23:32 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:23:32 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:23:32 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:23:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:23:32 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:23:32 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:23:32 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:23:32 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:23:32 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:23:32 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:23:32 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:23:32 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:23:32 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:23:32 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:23:32 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:23:32 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/87', 'resource': {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/88', 'resource': {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/89', 'resource': {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/90', 'resource': {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/91', 'resource': {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/92', 'resource': {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:23:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:23:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:23:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:23:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:23:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:23:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:23:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:23:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:23:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:23:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:23:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:23:32 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:23:32 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:23:32 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:23:32 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:23:32 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:23:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:23:32 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:23:32 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:23:32 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:23:32 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:23:32 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:23:32 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:23:32 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:23:32 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:23:32 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:23:32 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:23:32 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:23:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:23:32 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:23:32 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:23:32 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:23:32 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:23:32 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:23:32 PM: DEBUG: Number of patient entries from GET Response: 11 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:23:32 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:23:32] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:25:36 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:25:36 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:26:23 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:26:23 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:26:24 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:26:24 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:26:25 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:25] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:25 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:25] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:25 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:25] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:30] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:30 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118fec8b8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:26:30 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:26:30 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:26:30 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:26:30 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:26:30 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:26:30 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:26:30 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:26:30 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:26:30 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:26:30 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:26:30 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:26:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:30] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:32 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:32] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:32 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:26:32 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:26:32 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:26:32 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:26:32 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:26:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:26:32 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:26:32 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:26:32 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:26:32 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:26:32 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:26:32 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:26:32 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:26:32 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:26:32 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:26:32 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:26:32 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:26:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:26:32 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:26:32 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:26:32 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:26:32 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:26:32 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:26:32 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:26:32 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:26:32 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:26:32 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:26:32 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:26:32 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:26:32 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/87', 'resource': {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/88', 'resource': {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/89', 'resource': {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/90', 'resource': {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/91', 'resource': {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/92', 'resource': {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:26:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:26:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:26:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:26:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:26:32 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:26:32 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:26:32 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:26:32 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:26:32 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:26:32 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:26:32 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:26:32 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:26:32 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:26:32 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:26:32 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:26:32 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:26:32 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:26:32 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:26:32 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:26:32 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:26:32 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:26:32 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:26:32 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:26:32 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:26:32 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:26:33 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:26:33 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:26:33 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/20/2020 04:26:33 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:26:33 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:26:33 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:26:33 PM: DEBUG: patientDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:26:33 PM: DEBUG: allergyDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:26:33 PM: DEBUG: Number of patient entries from GET Response: 11 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:26:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:26:33] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:26:52 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:26:53 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:26:53 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:26:53 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:27:26 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:27:26 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:27:28 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:27:28 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:27:29 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:27:29 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:27:29 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:29] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:30] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:30 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:30] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:35 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:35] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:35 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119001818> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:27:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:27:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:27:35 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:27:35 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:27:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:27:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:27:35 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:27:35 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:27:35 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:27:35 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:27:35 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:27:35 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:35] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:39] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:27:39 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:27:39 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:27:39 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:27:39 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:27:39 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:27:39 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:27:39 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:27:39 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:27:39 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:27:39 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:27:39 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:27:39 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:27:39 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:27:39 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:27:39 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:27:39 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:27:39 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:27:39 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:27:39 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:27:39 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:27:39 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:27:39 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:27:39 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:27:39 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:27:39 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:27:39 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:27:39 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:27:39 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:27:39 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:27:39 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:27:39 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:27:39 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:27:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:27:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:27:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:27:39 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:27:39 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:27:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:27:39 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:27:39 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:27:39 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:27:39 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:27:39 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:27:39 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:27:39 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:27:39 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:27:39 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:27:39 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:27:39 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:27:39 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:27:39 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:27:39 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:27:39 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:27:39 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:27:39 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:27:39 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:27:39 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:27:39 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:27:41 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:27:41 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:27:41 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/20/2020 04:27:41 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:27:41 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:27:41 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:27:41 PM: DEBUG: patientDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:27:41 PM: DEBUG: allergyDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:27:41 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:27:41 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:27:41] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:28:05 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:28:05] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:28:05 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1190933b8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:28:05 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:28:05 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:28:05 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:28:05 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:28:05 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:28:05 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:28:06 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:28:06 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:28:06 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:28:06 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:28:06 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:28:06 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:28:06] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:28:10 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:28:10 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:28:10 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:28:10 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:28:10 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:28:10 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:28:10 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:28:10 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:28:10 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:28:10 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:28:10 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:28:10 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:28:10 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:28:10 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:28:10 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:28:10 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:28:10] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:28:10 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:28:10 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:28:10 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:28:10 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:28:10 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:28:10 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:28:10 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:28:10 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:28:10 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:28:10 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:28:10 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:28:10 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:28:10 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:28:10 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:28:10 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:28:10 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:28:10 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:28:10 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:28:10 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:28:10 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:28:10 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:28:10 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:28:10 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:28:10 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:28:10 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:28:10 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:28:10 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:28:10 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:28:10 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:28:10 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:28:10 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:28:10 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:28:10 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:28:10 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:28:10 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:28:10 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:28:10 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:28:10 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:28:10 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:28:10 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:28:10 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:28:10 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:28:10 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:28:10 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:28:10 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:28:10 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/20/2020 04:28:10 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:28:10 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:28:10 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:28:10 PM: DEBUG: patientDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:28:10 PM: DEBUG: allergyDictionaries: {'86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:28:10 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:28:10 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:28:10] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:29:53 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:29:53 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:29:54 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:29:54 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:31:09 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:31:09 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:31:10 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:31:10 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:33:21 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:33:21 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:33:22 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:33:22 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:33:34 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:33:34 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:33:35 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:33:35 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:34:08 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:34:08 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:34:09 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:34:09 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:34:16 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:34:16 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:34:17 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:34:17 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:34:24 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:34:24 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:34:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:28] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:34:28 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x117eda598> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:34:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:34:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:34:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:34:28 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:34:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:34:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:34:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:34:28 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:34:28 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:34:28 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:34:28 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:34:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:28] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:34:33 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:34:33 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:33] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:34:33 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:34:33 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:34:33 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:34:33 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:33 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:33 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:33 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:34:33 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:34:33 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:33 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:34:33 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:34:33 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:34:33 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:34:33 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:34:33 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:34:33 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:33 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:33 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:33 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:34:33 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:34:33 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:34:33 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:34:33 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:33 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:34:33 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:34:33 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:34:33 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:34:33 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:34:33 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:34:33 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:34:33 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:34:33 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:34:33 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:34:33 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:34:33 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:34:33 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:34:33 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:34:33 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:34:33 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:34:33 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:34:33 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:34:33 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:34:33 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:34:33 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:34:33 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:34:33 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:34:33 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:34:33 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:33 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:33 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:33 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:34:33 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:34:33 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:34:33 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:33 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:34:33 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:34:33 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:34:34 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:34:34 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:34:34 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:34:34 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:34:34 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:34:34 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:34:34 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:34:34 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:34:34 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:34:34 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:34:34] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:35:10 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:35:10 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:35:11 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:35:11 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:35:15 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:35:15 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:35:16 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:35:16 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:35:22 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:35:22] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:35:22 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1187cf818> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:35:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:35:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:35:22 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:35:22 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:35:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:35:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:35:22 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:35:22 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:35:22 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:35:22 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:35:22 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:35:22 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:35:22] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:35:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:35:28] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:35:28 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:35:28 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:35:28 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:35:28 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:35:28 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:28 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:28 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:28 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:35:28 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:35:28 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:28 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:35:28 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:35:28 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:35:28 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:35:28 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:35:28 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:35:28 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:28 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:28 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:28 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:35:28 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:35:28 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:35:28 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:35:28 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:28 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:35:28 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:35:28 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:35:28 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:35:28 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:35:28 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:35:28 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:35:28 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:35:28 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:35:28 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:35:28 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:35:28 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:35:28 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:35:28 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:35:28 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:35:28 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:35:28 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:35:28 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:35:28 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:35:28 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:35:28 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:35:28 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:35:28 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:35:28 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:35:28 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:28 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:28 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:28 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:35:28 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:35:28 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:35:28 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:28 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:35:28 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:35:28 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:35:28 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:35:28 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:35:28 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:35:28 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:35:28 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:35:28 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:35:28 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:35:28 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:35:28 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:35:28 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:35:28] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:38:08 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:38:08 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:38:09 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 04:38:09 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:38:10 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:38:10 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:38:17 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:38:17] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:38:17 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118ee9548> @ ParserClass.py : getRoot: --> line 43
04/20/2020 04:38:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:38:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:38:17 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:38:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 04:38:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 04:38:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 04:38:17 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 04:38:17 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 04:38:17 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:38:17 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 04:38:17 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 04:38:17 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:38:17] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:38:20 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:38:20] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:38:20 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:38:20 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:38:20 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:38:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:38:20 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:38:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:38:20 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:38:20 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:38:20 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:38:20 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:38:20 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:38:20 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:38:20 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:38:20 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:38:20 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:38:20 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:38:20 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:38:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:38:20 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:38:20 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:38:20 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:38:20 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:38:20 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:38:20 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:38:20 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:38:21 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:38:21 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:38:21 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:38:21 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:38:21 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/87', 'resource': {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/88', 'resource': {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/89', 'resource': {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/90', 'resource': {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/91', 'resource': {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/92', 'resource': {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:38:21 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:38:21 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:38:21 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:38:21 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:38:21 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:38:21 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 04:38:21 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 04:38:21 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:38:21 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:38:21 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:38:21 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:38:21 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:38:21 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:38:21 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:38:21 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:38:21 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:38:21 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:38:21 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:38:21 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:38:21 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:38:21 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:38:21 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:38:21 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:38:21 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:38:21 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:38:21 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:38:21 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:38:21 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:38:21 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:38:21 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:38:21 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:38:21 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:38:21 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 04:38:21 PM: DEBUG: Number of patient entries from GET Response: 11 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:38:21 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:38:21] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:39:19 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:39:19 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:39:20 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:39:20 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 04:42:20 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:42:20] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:42:20 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:42:20] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:42:20 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:42:20] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:42:20 PM: INFO: 127.0.0.1 - - [20/Apr/2020 16:42:20] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 04:51:18 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 04:51:18 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 04:51:19 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 04:51:19 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:07:46 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:07:46 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:07:47 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:07:47 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:18:55 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 05:18:55 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:18:56 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:18:56 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:19:01 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:19:01] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:19:07 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:19:07] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:19:07 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1186ec5e8> @ ParserClass.py : getRoot: --> line 43
04/20/2020 05:19:07 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:19:07 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:19:07 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:19:07 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 05:19:07 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:19:07 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:19:07 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:19:07 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:19:07 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:19:07 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:19:07 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 05:19:07 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:19:07] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:19:12 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 05:19:12 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:19:12] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:19:12 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 05:19:12 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 05:19:12 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 05:19:12 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:19:12 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:19:12 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:19:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:19:12 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:19:12 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:19:12 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 05:19:12 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 05:19:12 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 05:19:12 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 05:19:12 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:19:12 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 05:19:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:19:12 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:19:12 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:19:12 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:19:12 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:19:12 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 05:19:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 05:19:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:19:12 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:19:12 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:19:12 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:19:13 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:19:13 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:19:13 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 05:19:13 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 05:19:13 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 05:19:13 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:19:13 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:19:13 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:19:13 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:19:13 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:19:13 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:19:13 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:19:13 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:19:13 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:19:13 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:19:13 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:19:13 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:19:13 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 05:19:13 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 05:19:13 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 05:19:13 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:19:13 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:19:13 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:19:13 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:19:13 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:19:13 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 05:19:13 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 05:19:13 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:19:13 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:19:13 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:19:13 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:19:13 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:19:13 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:19:13 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 05:19:13 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 05:19:13 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 05:19:13 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 05:19:13 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 05:19:13 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 05:19:13 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 05:19:13 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:19:13] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:20:01 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:20:01 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:20:02 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:20:02 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:20:15 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:20:15 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:20:16 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:20:16 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:20:26 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:20:26 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:20:27 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:20:27 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:21:24 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:21:25 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:21:25 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:21:25 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:21:36 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/app.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:21:37 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:21:38 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 05:21:38 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:21:39 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:21:39 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:21:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:39] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:39] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:39 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:39] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:45 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:45] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:45 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x119027598> @ ParserClass.py : getRoot: --> line 43
04/20/2020 05:21:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:21:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:21:45 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:21:45 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 05:21:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:21:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:21:45 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:21:45 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:21:45 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:21:45 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:21:45 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 05:21:45 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:45] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:48 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 05:21:48 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 05:21:48 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 05:21:48 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 05:21:48 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:21:48 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:21:48 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:21:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:21:48 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:21:48 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:21:48 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 05:21:48 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 05:21:48 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 05:21:48 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 05:21:48 PM: DEBUG: Setting identifiers dictionary as {}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:21:48 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 05:21:48 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:21:48 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:21:48 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:21:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:21:48 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:21:48 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:21:48 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:21:48 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:21:48 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:48] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:21:48 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:21:48 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:21:48 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:21:48 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 05:21:48 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 05:21:48 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimandy', 'resource': {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimravi', 'resource': {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/87', 'resource': {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/88', 'resource': {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/89', 'resource': {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/90', 'resource': {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/91', 'resource': {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/92', 'resource': {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:21:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimandy', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.288-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Andy SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-50-5072 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'TCGA-50-5072', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-04-01', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Andy']}, {'use': 'usual', 'given': ['Andy']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:21:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1926-04-01 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:21:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimravi', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.498-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Ravi SIIM</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: LIDC-IDRI-0132 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'LIDC-IDRI-0132', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1941-03-31', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Ravi']}, {'use': 'usual', 'given': ['Ravi']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:21:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1941-03-31 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:21:48 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:07.939-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.220-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '89', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:08.345-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '90', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.634-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '91', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:37.893-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': '92', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T17:21:38.058-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml"><div class="hapiHeaderText">Noah J. <b>ASARIA </b></div><table class="hapiPropertyTable"><tbody><tr><td>Address</td><td><span>123 Sunnyside Lane </span><br/><span>PleasantVille </span><span>IL </span></td></tr><tr><td>Date of birth</td><td><span>29 December 1997</span></td></tr></tbody></table></div>'}, 'name': [{'family': 'Asaria', 'given': ['Noah', 'J.']}], 'telecom': [{'system': 'phone', 'value': '(111) 123 1234', 'use': 'home'}], 'gender': 'male', 'birthDate': '1997-12-29', 'address': [{'use': 'home', 'line': ['123 Sunnyside Lane'], 'city': 'PleasantVille', 'state': 'IL', 'postalCode': '12345'}]} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:21:48 PM: WARNING: Failed to parse names from resource @ PatientJSONResponseClass.py : parseResource: --> line 82
04/20/2020 05:21:48 PM: WARNING: nameList: [{'family': 'Asaria', 'given': ['Noah', 'J.']}] @ PatientJSONResponseClass.py : parseResource: --> line 83
04/20/2020 05:21:48 PM: DEBUG: address: 123 Sunnyside Lane @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:21:48 PM: DEBUG: date of birth parsed: 1997-12-29 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:21:48 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:21:48 PM: DEBUG: Parsed resource from response into dict {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:21:48 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 05:21:48 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 05:21:48 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimandy': {'given': 'Andy', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1926-04-01', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimravi': {'given': 'Ravi', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1941-03-31', 'gender': 'male', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}, '87': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '88': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '89': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '90': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '91': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}, '92': {'address': '123 Sunnyside Lane', 'birthtime': '1997-12-29', 'gender': 'male', 'state': 'IL', 'city': 'PleasantVille', 'postalcode': '12345'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 05:21:48 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:21:48 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:21:48 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:21:48 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:21:48 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:21:48 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 05:21:48 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 05:21:48 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:21:48 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:21:48 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:21:48 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:21:48 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:21:48 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:21:48 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 05:21:48 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 05:21:48 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 05:21:48 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 05:21:48 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 05:21:48 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 05:21:48 PM: DEBUG: Number of patient entries from GET Response: 11 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 05:21:48 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:21:48] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:21 PM: INFO:  * Running on http://localhost:5555/ (Press CTRL+C to quit) @ _internal.py : _log: --> line 113
04/20/2020 05:27:21 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:27:21 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:27:22 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:27:24 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:24] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:24 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:24] "[37mGET / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:24 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:24] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:31 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:31] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:31 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x118fe3048> @ ParserClass.py : getRoot: --> line 43
04/20/2020 05:27:31 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:27:31 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:27:31 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:27:31 PM: DEBUG: Demographics dictionary parsed: {'given': ['Neela'], 'family': ['SIIM'], 'address': ['534 Erewhon St'], 'city': ['PleasantVilles '], 'state': ['Vic'], 'postalcode': ['39999'], 'birthtime': '19500428', 'gender': 'female'} @ ParserClass.py : __init__: --> line 25
04/20/2020 05:27:31 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/20/2020 05:27:31 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/20/2020 05:27:31 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/20/2020 05:27:31 PM: INFO: Field given is in list format, returning Neela @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field family is in list format, returning SIIM @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field address is in list format, returning 534 Erewhon St @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field city is in list format, returning PleasantVilles  @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field state is in list format, returning Vic @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field postalcode is in list format, returning 39999 @ ParserClass.py : getFieldFromDemographicDict: --> line 200
04/20/2020 05:27:31 PM: INFO: Field birthtime is not a list, returning 19500428 @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:27:31 PM: INFO: Field gender is not a list, returning female @ ParserClass.py : getFieldFromDemographicDict: --> line 203
04/20/2020 05:27:31 PM: ERROR: Can't find field in dict! @ ParserClass.py : getFieldFromDemographicDict: --> line 206
04/20/2020 05:27:31 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:31] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:37 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:37] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:27:37 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 05:27:37 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 05:27:37 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 05:27:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 05:27:37 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:37 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:37 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:27:37 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:27:37 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:27:37 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:37 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 05:27:37 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 05:27:37 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 05:27:37 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 05:27:37 PM: DEBUG: Setting identifiers dictionary as {'family': 'SIIM', 'gender': 'female'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:27:37 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 05:27:37 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:37 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:37 PM: DEBUG: identifiersDict.items(): dict_items([('family', 'SIIM'), ('gender', 'female')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:27:37 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:27:37 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:27:37 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 05:27:37 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 05:27:37 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?family=SIIM&gender=female @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:37 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:27:37 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:27:37 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:27:37 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?family=SIIM&gender=female HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:27:37 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:27:37 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 05:27:37 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 05:27:37 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimneela', 'resource': {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimsally', 'resource': {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 05:27:37 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimneela', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.405-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Neela <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-BA-4077 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-BA-4077', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-28', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:27:37 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Neela']}, {'use': 'usual', 'given': ['Neela']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:27:37 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:27:37 PM: DEBUG: date of birth parsed: 1950-04-28 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:27:37 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:27:37 PM: DEBUG: Parsed resource from response into dict {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:27:37 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimsally', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.583-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Sally <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Rochester, MD, 53999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: BreastDx-01-0003 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'urn:oid:1.2.36.146.595.217.0.1', 'value': 'BreastDx-01-0003', 'period': {'start': '2001-05-06'}, 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(507) 555 6473', 'use': 'work'}], 'gender': 'female', 'birthDate': '1950-04-12', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'Rochester', 'state': 'MN', 'postalCode': '53999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 05:27:37 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM', 'given': ['Sally']}, {'use': 'usual', 'given': ['Sally']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 05:27:37 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 05:27:37 PM: DEBUG: date of birth parsed: 1950-04-12 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 05:27:37 PM: DEBUG: gender parsed: female @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 05:27:37 PM: DEBUG: Parsed resource from response into dict {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 05:27:37 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 05:27:37 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 05:27:37 PM: DEBUG: patientDictionaries: {'siimneela': {'given': 'Neela', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1950-04-28', 'gender': 'female', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}, 'siimsally': {'given': 'Sally', 'family': 'SIIM', 'address': '534 Erewhon St', 'birthtime': '1950-04-12', 'gender': 'female', 'state': 'MN', 'city': 'Rochester', 'postalcode': '53999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 05:27:37 PM: DEBUG: Setting identifiers dictionary as {'code': ['1191']}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 05:27:37 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:37 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:37 PM: DEBUG: identifiersDict.items(): dict_items([('code', ['1191'])]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:27:37 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 05:27:37 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 05:27:37 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 05:27:37 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/?code=1191 @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:37 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:27:37 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:27:37 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:27:37 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/?code=1191 HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:27:37 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 05:27:37 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 05:27:37 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 05:27:37 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/93', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '93', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T18:29:08.519-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimneela'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 05:27:37 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 05:27:37 PM: DEBUG: patientDictionaries: {'siimjoe': {'substances': ['1191', '215674']}, 'siimneela': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 05:27:37 PM: DEBUG: allergyDictionaries: {'siimjoe': {'substances': ['1191', '215674']}, 'siimneela': {'substances': ['1191', '215674']}} @ AllergiesJSONResponseClass.py : getAllergyDictionaries: --> line 47
04/20/2020 05:27:37 PM: DEBUG: Number of patient entries from GET Response: 2 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 05:27:37 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:27:37] "[37mPOST / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:31:47 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:31:47] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:31:47 PM: INFO: 127.0.0.1 - - [20/Apr/2020 17:31:47] "[37mHEAD / HTTP/1.1[0m" 200 - @ _internal.py : _log: --> line 113
04/20/2020 05:36:14 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/AllergiesJSONResponseClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:36:14 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:36:15 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:36:15 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:37:28 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/DictionaryMatchClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:37:28 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:37:28 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:37:28 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:38:47 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/DictionaryMatchClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:38:47 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:38:48 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:38:48 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:40:27 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/DictionaryMatchClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:40:27 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:40:28 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:40:28 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
04/20/2020 05:40:43 PM: INFO:  * Detected change in '/Users/Noah/Documents/GitHub/MasterPatientID/HTTPRequestClasses/DictionaryMatchClass.py', reloading @ _internal.py : _log: --> line 113
04/20/2020 05:40:43 PM: INFO:  * Restarting with stat @ _internal.py : _log: --> line 113
04/20/2020 05:40:44 PM: WARNING:  * Debugger is active! @ _internal.py : _log: --> line 113
04/20/2020 05:40:44 PM: INFO:  * Debugger PIN: 272-626-615 @ _internal.py : _log: --> line 113
