02/28/2020 06:16:07 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:16:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:16:07 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:16:07 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:16:07 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:16:07 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:16:07 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:16:07 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:16:07 PM: WARNING: Contructed a new URL @ HTTPRequestClass.py : __init__: --> line 35
02/28/2020 06:16:07 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:16:07 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:16:07 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:16:07 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:16:07 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:16:07 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:16:07 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 40
02/28/2020 06:16:07 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 47
02/28/2020 06:16:07 PM: INFO: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 60
02/28/2020 06:17:08 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:17:08 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:17:08 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:17:08 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:17:08 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:17:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:17:08 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:17:08 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:17:08 PM: WARNING: Contructed a new URL @ HTTPRequestClass.py : __init__: --> line 35
02/28/2020 06:17:08 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:17:08 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:17:08 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:17:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:17:08 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:17:08 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:17:08 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 40
02/28/2020 06:17:08 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 47
02/28/2020 06:17:08 PM: INFO: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 60
02/28/2020 06:17:33 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:17:33 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:17:33 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:17:33 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:17:33 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 99
02/28/2020 06:17:33 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:17:33 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 112
02/28/2020 06:17:33 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 114
02/28/2020 06:17:33 PM: WARNING: Contructed a new URL @ HTTPRequestClass.py : __init__: --> line 35
02/28/2020 06:17:33 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:17:33 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:17:33 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 99
02/28/2020 06:17:33 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:17:33 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 112
02/28/2020 06:17:33 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 114
02/28/2020 06:17:33 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 40
02/28/2020 06:17:33 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 47
02/28/2020 06:17:33 PM: INFO: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 60
02/28/2020 06:19:53 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:19:53 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:19:53 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:19:53 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:19:53 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:19:53 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:19:53 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:19:53 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:19:53 PM: WARNING: Contructed a new URL @ HTTPRequestClass.py : __init__: --> line 35
02/28/2020 06:19:53 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:19:53 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:19:53 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:19:53 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:19:53 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:19:53 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:19:53 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 40
02/28/2020 06:19:53 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 47
02/28/2020 06:19:53 PM: DEBUG: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 60
02/28/2020 06:19:53 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:19:53 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:19:53 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:19:53 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 101
02/28/2020 06:19:53 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 101
02/28/2020 06:19:53 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:19:53 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 107
02/28/2020 06:19:53 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:19:53 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 92
02/28/2020 06:19:53 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 95
02/28/2020 06:19:53 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 98
02/28/2020 06:19:53 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 101
02/28/2020 06:19:53 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 101
02/28/2020 06:19:53 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:19:53 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 107
02/28/2020 06:19:53 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 113
02/28/2020 06:19:53 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 139
02/28/2020 06:19:53 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 144
02/28/2020 06:19:53 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:19:53 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?gender=male&_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:19:53 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 147
02/28/2020 06:23:43 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
02/28/2020 06:23:43 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
02/28/2020 06:23:43 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:23:43 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:23:43 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:43 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:43 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:43 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:23:43 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:23:43 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:43 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
02/28/2020 06:23:43 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
02/28/2020 06:23:43 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
02/28/2020 06:23:43 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
02/28/2020 06:23:43 PM: DEBUG: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
02/28/2020 06:23:43 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
02/28/2020 06:23:43 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:43 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:43 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:43 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:43 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:43 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
02/28/2020 06:23:43 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:23:43 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:43 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:43 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:43 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:43 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:43 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:43 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
02/28/2020 06:23:43 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:23:43 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:43 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
02/28/2020 06:23:43 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
02/28/2020 06:23:43 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:23:43 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?gender=male&_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:23:43 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
02/28/2020 06:23:47 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
02/28/2020 06:23:47 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
02/28/2020 06:23:47 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:23:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:23:47 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:47 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:47 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:23:47 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:23:47 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:47 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
02/28/2020 06:23:47 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
02/28/2020 06:23:47 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
02/28/2020 06:23:47 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
02/28/2020 06:23:47 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
02/28/2020 06:23:47 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:47 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:47 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:23:47 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:23:47 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:47 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:47 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:47 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:23:47 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:23:47 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:47 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
02/28/2020 06:23:47 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
02/28/2020 06:23:47 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:23:47 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/Patient/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:23:47 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
02/28/2020 06:23:54 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:23:54 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:23:54 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:54 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:54 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:54 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:23:54 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:23:54 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:54 PM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
02/28/2020 06:23:54 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
02/28/2020 06:23:54 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
02/28/2020 06:23:54 PM: DEBUG: Setting identifiers dictionary as {'gender': 'male', '_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
02/28/2020 06:23:54 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:54 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:54 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:54 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:54 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:54 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
02/28/2020 06:23:54 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:23:54 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:54 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:23:54 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:23:54 PM: DEBUG: identifiersDict.items(): dict_items([('gender', 'male'), ('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
02/28/2020 06:23:54 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:54 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
02/28/2020 06:23:54 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
02/28/2020 06:23:54 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
02/28/2020 06:23:54 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?gender=male&_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:23:54 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
02/28/2020 06:23:54 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
02/28/2020 06:23:54 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:23:54 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?gender=male&_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:23:54 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
02/28/2020 06:24:12 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
02/28/2020 06:24:12 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
02/28/2020 06:24:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:24:12 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:24:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:24:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:24:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:24:12 PM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
02/28/2020 06:24:12 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=POST, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
02/28/2020 06:24:12 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
02/28/2020 06:24:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:24:12 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:24:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:24:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:24:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:24:12 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
02/28/2020 06:24:12 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
02/28/2020 06:24:12 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:24:12 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/Patient/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:24:12 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
02/28/2020 06:24:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:24:12 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:24:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:24:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:24:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:24:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
02/28/2020 06:24:12 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
02/28/2020 06:24:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
02/28/2020 06:24:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
02/28/2020 06:24:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
02/28/2020 06:24:12 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
02/28/2020 06:24:12 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
02/28/2020 06:24:12 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
02/28/2020 06:24:12 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/Patient/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
02/28/2020 06:24:12 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
03/03/2020 03:05:57 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/03/2020 03:06:03 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/03/2020 03:06:03 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/03/2020 03:06:03 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/03/2020 03:06:03 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/03/2020 03:06:03 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/03/2020 03:06:03 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:05 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 07:08:05 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:05 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 07:08:05 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:05 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:06 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:08:14 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:10:04 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:10:04 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:11:23 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:11:23 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:12:22 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:12:22 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:20:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:20:20 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:22:08 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:22:08 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:22:59 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:23:00 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:23:33 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:23:33 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:23:45 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:23:45 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 21
03/09/2020 07:24:56 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:24:56 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 07:26:39 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:26:41 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 07:27:13 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 07:27:13 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 11:21:56 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:21:57 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 11:22:22 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:22:22 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 11:22:56 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:22:56 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 22
03/09/2020 11:23:41 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:23:41 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 23
03/09/2020 11:28:58 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 11:28:58 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:28:58 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 11:28:58 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:28:59 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:28:59 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:13 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 11:29:13 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:14 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/09/2020 11:29:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:35 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:29:35 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 24
03/09/2020 11:30:25 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:30:26 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 25
03/09/2020 11:30:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:30:37 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 26
03/09/2020 11:30:48 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:30:48 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:31:24 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:31:24 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:32:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:32:07 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:32:45 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:32:45 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:33:26 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:33:26 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:34:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:34:37 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 59
03/09/2020 11:34:37 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:34:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:34:48 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 59
03/09/2020 11:34:48 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:35:53 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:35:53 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 59
03/09/2020 11:35:53 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:37:18 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:37:19 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 60
03/09/2020 11:37:19 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:37:49 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:37:49 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:37:49 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:38:03 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:38:03 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:38:03 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:38:26 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:38:26 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:38:26 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:38:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:38:45 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:38:45 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:39:00 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:39:00 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:39:00 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:39:17 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:39:17 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:39:17 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:39:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:39:44 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 61
03/09/2020 11:39:44 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:40:00 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:40:00 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 59
03/09/2020 11:40:00 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:40:24 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:40:24 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 60
03/09/2020 11:40:24 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:40:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:40:37 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 60
03/09/2020 11:40:37 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 27
03/09/2020 11:41:43 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:41:44 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 54
03/09/2020 11:41:44 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 25
03/09/2020 11:42:15 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:42:15 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:42:15 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 24
03/09/2020 11:42:31 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:42:31 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:42:31 PM: ERROR: Could not initialize PatientJSONResponse! @ JSONResponseClass.py : __init__: --> line 24
03/09/2020 11:43:27 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:43:27 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:43:27 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 71
03/09/2020 11:43:51 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:43:51 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:43:51 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 72
03/09/2020 11:44:19 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:44:19 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:44:19 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 73
03/09/2020 11:44:43 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:44:43 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:44:43 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 74
03/09/2020 11:45:38 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:45:38 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:45:38 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 74
03/09/2020 11:45:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:45:52 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:45:52 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 74
03/09/2020 11:46:15 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:46:15 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:46:15 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 74
03/09/2020 11:46:53 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:46:53 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:46:53 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 75
03/09/2020 11:47:09 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:47:11 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:47:33 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:47:33 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/09/2020 11:49:25 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:49:25 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/09/2020 11:50:00 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:50:00 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/09/2020 11:50:35 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/09/2020 11:50:35 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/10/2020 12:05:16 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/10/2020 12:05:16 AM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/10/2020 12:06:24 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/10/2020 12:06:24 AM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/20/2020 09:34:28 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1027379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:34:28 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:37:25 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1062379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:37:25 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:37:55 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1052379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:37:55 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:45:04 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1049379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:45:04 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:45:48 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x10622e9f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:45:48 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:45:48 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113689278> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:48:59 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105a379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:48:59 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:49:24 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102f209f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:49:24 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:51:23 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105a379f8> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:51:23 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:51:31 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1051ab598> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:51:31 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:51:31 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1051ab598> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:51:31 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:52:20 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1058ab598> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:52:20 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:52:20 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112c54868> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:52:20 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:52:37 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1051ab598> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:52:37 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 20
03/20/2020 09:52:37 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 151
03/20/2020 09:52:37 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1051ab598> @ ParserClass.py : getRoot: --> line 34
03/20/2020 09:52:37 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 20
03/20/2020 10:03:00 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1050aa5e8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:03:00 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:03:00 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 157
03/20/2020 10:03:00 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1050aa5e8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:03:00 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:04:52 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113475b38> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:04:52 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:04:52 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 157
03/20/2020 10:04:52 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113475b38> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:04:52 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:05:49 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11359eb88> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:05:49 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:05:49 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 158
03/20/2020 10:05:49 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11359eb88> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:05:49 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:07:24 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135a0c78> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:07:24 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:07:24 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 161
03/20/2020 10:07:24 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135a0c78> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:07:24 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:08:06 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112c88c78> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:06 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:08:06 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 162
03/20/2020 10:08:06 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112c88c78> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:06 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e9fcc8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112ee36d8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:34 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:08:34 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112f21f98> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e9fcc8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112f21cc8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:08:34 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:08:34 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112f21cc8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11349dd18> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1134e1728> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:09:18 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113520f98> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11349dd18> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113520d68> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:09:18 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:09:18 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113520d68> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d9dd18> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112de1728> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:11:26 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e20f98> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d9dd18> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e20d68> @ ParserClass.py : getRoot: --> line 38
03/20/2020 10:11:26 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 10:11:26 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e20d68> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113599ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135dd8b8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 12:56:47 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11361d958> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113599ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135b12c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:47 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 12:56:47 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135b12c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113584ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135c98b8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 12:56:55 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113609958> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113584ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11359c2c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 12:56:55 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 12:56:55 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11359c2c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11368fea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136d38b8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 01:21:42 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113713958> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11368fea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136a72c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:21:42 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 01:21:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136a72c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111b78ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111bbc8b8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/20/2020 01:30:11 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111bfc958> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111b78ea8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111b902c8> @ ParserClass.py : getRoot: --> line 38
03/20/2020 01:30:11 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/20/2020 01:30:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111b902c8> @ ParserClass.py : getRoot: --> line 38
03/22/2020 06:46:56 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113590f48> @ ParserClass.py : getRoot: --> line 38
03/22/2020 06:46:56 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/22/2020 06:46:56 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/22/2020 06:46:56 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135d5688> @ ParserClass.py : getRoot: --> line 38
03/22/2020 06:46:56 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/22/2020 06:47:27 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11257fef8> @ ParserClass.py : getRoot: --> line 38
03/22/2020 06:47:27 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/22/2020 06:47:27 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/22/2020 06:47:27 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11257fef8> @ ParserClass.py : getRoot: --> line 38
03/22/2020 06:47:27 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/22/2020 06:47:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:47:44 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 06:47:52 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/22/2020 06:47:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:47:52 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/22/2020 06:47:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:47:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:47:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:40 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/22/2020 06:49:40 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:40 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/22/2020 06:49:40 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:40 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:41 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:49 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:49 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:49:50 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 06:54:16 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:54:19 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 06:54:19 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:08:46 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:08:46 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:10:38 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:10:38 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:10:38 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:10:53 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:10:53 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:11:06 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:11:06 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:11:06 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:11:13 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:11:13 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:11:31 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:11:31 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:11:31 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:11:50 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:11:50 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:11:50 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:11:59 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:11:59 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:12:15 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:12:15 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:12:15 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:12:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:12:20 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:12:20 PM: ERROR: Failed parsing patient dictionary from entries @ JSONResponseClass.py : getDictFromEntries: --> line 69
03/22/2020 07:12:31 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:12:31 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:15:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:15:45 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:16:02 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:16:02 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/22/2020 07:16:42 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:16:42 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/22/2020 07:16:59 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/22/2020 07:16:59 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 53
03/22/2020 07:30:51 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112b71ea8> @ ParserClass.py : getRoot: --> line 38
03/22/2020 07:30:51 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/22/2020 07:30:51 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/22/2020 07:30:51 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112aefe08> @ ParserClass.py : getRoot: --> line 38
03/22/2020 07:30:51 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/22/2020 07:31:20 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1134acea8> @ ParserClass.py : getRoot: --> line 38
03/22/2020 07:31:20 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/22/2020 07:31:20 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 163
03/22/2020 07:31:20 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113443e08> @ ParserClass.py : getRoot: --> line 38
03/22/2020 07:31:20 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/23/2020 02:45:46 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/23/2020 02:45:46 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/23/2020 02:45:47 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/23/2020 02:45:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/23/2020 02:45:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/23/2020 02:45:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/23/2020 02:45:52 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/23/2020 02:45:52 PM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 52
03/23/2020 02:45:57 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111c119a8> @ ParserClass.py : getRoot: --> line 39
03/23/2020 02:45:57 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/23/2020 02:45:57 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 164
03/23/2020 02:45:57 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111c55958> @ ParserClass.py : getRoot: --> line 39
03/23/2020 02:45:57 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/26/2020 12:05:10 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/26/2020 12:05:10 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/26/2020 12:05:14 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
03/26/2020 12:05:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/26/2020 12:05:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/26/2020 12:05:14 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/27/2020 12:38:53 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
03/27/2020 12:38:53 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/27/2020 12:38:53 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:38:53 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:38:53 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:38:53 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
03/27/2020 12:38:53 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
03/27/2020 12:38:53 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:38:53 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
03/27/2020 12:38:53 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
03/27/2020 12:38:53 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
03/27/2020 12:38:53 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
03/27/2020 12:38:53 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:38:53 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:38:53 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:38:53 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
03/27/2020 12:38:53 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
03/27/2020 12:38:53 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
03/27/2020 12:38:53 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:38:53 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
03/27/2020 12:38:53 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
03/27/2020 12:38:53 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
03/27/2020 12:38:53 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
03/27/2020 12:38:53 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
03/27/2020 12:38:53 AM: INFO: Creating patient JSON Response Instance @ JSONResponseClass.py : createPatientJSONResponse: --> line 129
03/27/2020 12:38:53 AM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
03/27/2020 12:38:53 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ JSONResponseClass.py : getPatientEntries: --> line 33
03/27/2020 12:38:53 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ JSONResponseClass.py : parseResource: --> line 75
03/27/2020 12:38:53 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ JSONResponseClass.py : parseResource: --> line 80
03/27/2020 12:38:53 AM: DEBUG: address: 534 Erewhon St @ JSONResponseClass.py : parseResource: --> line 88
03/27/2020 12:38:53 AM: DEBUG: date of birth parsed: 1926-03-30 @ JSONResponseClass.py : parseResource: --> line 98
03/27/2020 12:38:53 AM: DEBUG: gender parsed: male @ JSONResponseClass.py : parseResource: --> line 99
03/27/2020 12:38:53 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ JSONResponseClass.py : parseResource: --> line 113
03/27/2020 12:38:53 AM: INFO: Created PatientJSONResponse object @ JSONResponseClass.py : __init__: --> line 19
03/27/2020 12:38:53 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : __init__: --> line 20
03/27/2020 12:38:53 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : getPatientDictionaries: --> line 41
03/27/2020 12:38:53 AM: DEBUG: Number of patient entries from GET Response: 1 @ JSONResponseClass.py : getNumberOfPatientEntries: --> line 37
03/27/2020 12:38:59 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
03/27/2020 12:38:59 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/27/2020 12:38:59 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:38:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:38:59 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:38:59 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
03/27/2020 12:38:59 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
03/27/2020 12:38:59 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:38:59 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
03/27/2020 12:38:59 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
03/27/2020 12:38:59 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
03/27/2020 12:38:59 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
03/27/2020 12:38:59 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:38:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:38:59 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:38:59 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
03/27/2020 12:38:59 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
03/27/2020 12:38:59 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
03/27/2020 12:38:59 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:38:59 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
03/27/2020 12:38:59 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
03/27/2020 12:38:59 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
03/27/2020 12:38:59 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
03/27/2020 12:38:59 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
03/27/2020 12:38:59 AM: INFO: Creating patient JSON Response Instance @ JSONResponseClass.py : createPatientJSONResponse: --> line 129
03/27/2020 12:38:59 AM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
03/27/2020 12:38:59 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ JSONResponseClass.py : getPatientEntries: --> line 33
03/27/2020 12:38:59 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ JSONResponseClass.py : parseResource: --> line 75
03/27/2020 12:38:59 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ JSONResponseClass.py : parseResource: --> line 80
03/27/2020 12:38:59 AM: DEBUG: address: 534 Erewhon St @ JSONResponseClass.py : parseResource: --> line 88
03/27/2020 12:38:59 AM: DEBUG: date of birth parsed: 1926-03-30 @ JSONResponseClass.py : parseResource: --> line 98
03/27/2020 12:38:59 AM: DEBUG: gender parsed: male @ JSONResponseClass.py : parseResource: --> line 99
03/27/2020 12:38:59 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ JSONResponseClass.py : parseResource: --> line 113
03/27/2020 12:38:59 AM: INFO: Created PatientJSONResponse object @ JSONResponseClass.py : __init__: --> line 19
03/27/2020 12:38:59 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : __init__: --> line 20
03/27/2020 12:38:59 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthdate': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : getPatientDictionaries: --> line 41
03/27/2020 12:38:59 AM: DEBUG: Number of patient entries from GET Response: 1 @ JSONResponseClass.py : getNumberOfPatientEntries: --> line 37
03/27/2020 12:42:04 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
03/27/2020 12:42:04 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
03/27/2020 12:42:04 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:42:04 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:42:04 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:42:04 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
03/27/2020 12:42:04 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
03/27/2020 12:42:04 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:42:04 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
03/27/2020 12:42:04 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
03/27/2020 12:42:04 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
03/27/2020 12:42:04 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
03/27/2020 12:42:04 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
03/27/2020 12:42:04 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
03/27/2020 12:42:04 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
03/27/2020 12:42:04 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
03/27/2020 12:42:04 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
03/27/2020 12:42:04 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
03/27/2020 12:42:04 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
03/27/2020 12:42:04 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
03/27/2020 12:42:04 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
03/27/2020 12:42:04 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
03/27/2020 12:42:04 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
03/27/2020 12:42:04 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
03/27/2020 12:42:04 AM: INFO: Creating patient JSON Response Instance @ JSONResponseClass.py : createPatientJSONResponse: --> line 129
03/27/2020 12:42:04 AM: ERROR: Could not parse entries from JSON response @ JSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
03/27/2020 12:42:04 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ JSONResponseClass.py : getPatientEntries: --> line 33
03/27/2020 12:42:04 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-03-26T03:00:36.737-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ JSONResponseClass.py : parseResource: --> line 75
03/27/2020 12:42:04 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ JSONResponseClass.py : parseResource: --> line 80
03/27/2020 12:42:04 AM: DEBUG: address: 534 Erewhon St @ JSONResponseClass.py : parseResource: --> line 88
03/27/2020 12:42:04 AM: DEBUG: date of birth parsed: 1926-03-30 @ JSONResponseClass.py : parseResource: --> line 98
03/27/2020 12:42:04 AM: DEBUG: gender parsed: male @ JSONResponseClass.py : parseResource: --> line 99
03/27/2020 12:42:04 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ JSONResponseClass.py : parseResource: --> line 113
03/27/2020 12:42:04 AM: INFO: Created PatientJSONResponse object @ JSONResponseClass.py : __init__: --> line 19
03/27/2020 12:42:04 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : __init__: --> line 20
03/27/2020 12:42:04 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ JSONResponseClass.py : getPatientDictionaries: --> line 41
03/27/2020 12:42:04 AM: DEBUG: Number of patient entries from GET Response: 1 @ JSONResponseClass.py : getNumberOfPatientEntries: --> line 37
03/27/2020 01:39:29 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112cf9a48> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:39:29 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:39:29 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 164
03/27/2020 01:39:29 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d968b8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:39:29 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:39:50 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112be7a48> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:39:50 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:39:50 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 164
03/27/2020 01:39:50 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d868b8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:39:50 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:40:31 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111c29a48> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:40:31 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:40:31 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 165
03/27/2020 01:40:31 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111c709f8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:40:31 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:41:19 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113444a48> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:41:19 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:41:19 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 165
03/27/2020 01:41:19 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x11348b9f8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:41:19 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:46:12 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1122f49a8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:46:12 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:46:12 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 166
03/27/2020 01:46:12 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112392818> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:46:12 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:47:02 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111af99a8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:47:02 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'F', 'race': 'Caucasian or European American'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:47:02 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 166
03/27/2020 01:47:02 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x111b97818> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:47:02 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'F', 'race': 'White'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:47:53 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112c299a8> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:47:53 AM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 21
03/27/2020 01:47:53 AM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 166
03/27/2020 01:47:53 AM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112c6f958> @ ParserClass.py : getRoot: --> line 39
03/27/2020 01:47:53 AM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 21
04/06/2020 10:18:12 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102540cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:18:12 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 114
04/06/2020 10:18:12 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:18:12 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 187
04/06/2020 10:19:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102640cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:19:23 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 115
04/06/2020 10:19:23 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:19:23 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 188
04/06/2020 10:21:06 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:21:06 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 115
04/06/2020 10:21:06 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:21:06 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 188
04/06/2020 10:21:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:21:23 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 116
04/06/2020 10:21:23 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:21:23 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 189
04/06/2020 10:21:40 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105872cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:21:40 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 116
04/06/2020 10:21:40 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:21:40 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 189
04/06/2020 10:22:18 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104072cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:22:18 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 116
04/06/2020 10:22:18 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:22:18 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 189
04/06/2020 10:22:35 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102749cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:22:35 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 116
04/06/2020 10:22:35 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:22:35 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 189
04/06/2020 10:24:07 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102d40cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:24:07 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 115
04/06/2020 10:24:07 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:24:07 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 188
04/06/2020 10:24:33 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105a72cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:24:33 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 115
04/06/2020 10:24:33 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:24:33 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 188
04/06/2020 10:24:37 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x10718f5e8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:24:51 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 115
04/06/2020 10:25:33 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102772cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:25:33 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 119
04/06/2020 10:25:33 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:25:33 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 192
04/06/2020 10:27:09 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104872cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:27:09 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:27:09 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:27:09 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/06/2020 10:29:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:29:23 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:29:23 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:29:23 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/06/2020 10:30:41 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:30:41 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:30:41 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:30:41 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/06/2020 10:31:25 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105172cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:31:25 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:31:25 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:31:25 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/06/2020 10:31:29 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105872cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:31:29 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:31:29 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:31:29 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/06/2020 10:32:17 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102749cc8> @ ParserClass.py : getRoot: --> line 41
04/06/2020 10:32:17 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 120
04/06/2020 10:32:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/06/2020 10:32:17 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 193
04/07/2020 10:42:19 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104949cc8> @ ParserClass.py : getRoot: --> line 41
04/07/2020 10:42:19 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:42:19 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/07/2020 10:42:19 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 194
04/07/2020 10:42:49 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 41
04/07/2020 10:42:49 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 53
04/07/2020 10:42:49 PM: WARNING: Could not parse allergies!{} @ ParserClass.py : getAllergiesDict: --> line 122
04/07/2020 10:42:49 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 23
04/07/2020 10:42:49 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 195
04/07/2020 10:43:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105272cc8> @ ParserClass.py : getRoot: --> line 42
04/07/2020 10:43:11 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 54
04/07/2020 10:43:11 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 123
04/07/2020 10:43:11 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 24
04/07/2020 10:43:11 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 196
04/07/2020 10:44:28 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105940cc8> @ ParserClass.py : getRoot: --> line 42
04/07/2020 10:44:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 54
04/07/2020 10:44:28 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 123
04/07/2020 10:44:28 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 24
04/07/2020 10:44:28 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 196
04/07/2020 10:44:52 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104149cc8> @ ParserClass.py : getRoot: --> line 42
04/07/2020 10:44:52 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 54
04/07/2020 10:44:52 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 123
04/07/2020 10:44:52 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 24
04/07/2020 10:44:52 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 196
04/07/2020 10:45:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102749cc8> @ ParserClass.py : getRoot: --> line 42
04/07/2020 10:45:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 54
04/07/2020 10:45:24 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 57
04/07/2020 10:45:24 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 123
04/07/2020 10:45:24 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 24
04/07/2020 10:45:24 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 196
04/07/2020 10:46:35 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105249cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:46:35 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:46:35 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:46:35 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:46:35 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:48:32 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104972cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:48:32 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:48:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:48:33 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:48:33 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:48:33 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:48:33 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 199
04/07/2020 10:48:46 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104872cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:48:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:48:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:48:46 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:48:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:48:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:48:46 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 199
04/07/2020 10:49:09 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105949cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:49:09 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:49:09 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:49:10 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:49:10 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:49:10 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:49:10 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 199
04/07/2020 10:50:57 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104072cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:50:57 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:50:57 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:50:57 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:50:57 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:50:57 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:50:57 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 199
04/07/2020 10:51:19 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104972cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:51:19 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:51:19 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:51:19 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:51:19 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:51:19 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:51:19 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 199
04/07/2020 10:51:45 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105172cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:51:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:51:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:51:45 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:51:45 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:51:45 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:51:45 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:51:45 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:51:45 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:52:52 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105272cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:52:52 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:52:52 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:52:52 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:52:52 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:52:52 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:52:52 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:52:52 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:52:52 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:55:46 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:55:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:55:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:55:46 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:55:46 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:55:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:55:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:55:46 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:55:46 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:56:04 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105249cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:56:04 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:56:04 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:56:04 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:56:04 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:56:04 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:56:04 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:56:04 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:56:04 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:56:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102f3bcc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:56:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:56:24 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:56:24 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:56:24 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:56:24 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:56:24 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:56:24 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:56:24 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:57:26 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104a49cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:57:26 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:57:26 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:57:26 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:57:26 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:57:26 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:57:26 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:57:26 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:57:26 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:57:51 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x104072cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:57:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:57:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:57:51 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:57:51 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:57:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:57:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:57:51 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:15 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102749cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:58:15 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:15 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:16 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:16 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:58:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:16 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:16 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112b14d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:58:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:23 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:23 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:23 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:58:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:23 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:23 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:23 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 10:58:23 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112bb3408> @ ParserClass.py : getRoot: --> line 43
04/07/2020 10:58:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:23 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:23 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 10:58:23 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 10:58:23 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 10:58:23 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 10:58:24 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:02:16 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113661d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:02:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:02:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:02:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:02:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:02:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:02:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:02:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:02:17 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:02:17 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136e8408> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:02:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:02:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:02:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:02:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:02:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:02:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:02:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:05:39 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113531d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:05:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:05:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:05:39 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:05:39 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:05:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:05:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:05:39 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:05:39 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:05:39 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135b7408> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:05:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:05:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:05:39 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:05:39 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:05:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:05:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:05:39 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:06:36 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112e31d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:06:36 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:06:36 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:06:36 PM: INFO: {'allergies': ['Bicillin L-ACodeine PhosphateAspirin'], 'immunizations': ['tetanus toxoid, unspecified formulationInfluenza, seasonal, injectable, preservative freeInfluenza, seasonal, injectable, preservative freePneumococcal, 23-valent, adult'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:06:36 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:06:36 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:06:36 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:06:36 PM: INFO: {'allergies': ['Bicillin L-ACodeine PhosphateAspirin'], 'immunizations': ['tetanus toxoid, unspecified formulationInfluenza, seasonal, injectable, preservative freeInfluenza, seasonal, injectable, preservative freePneumococcal, 23-valent, adult'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:06:36 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:06:36 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112eb7458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:06:36 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:06:36 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:06:36 PM: INFO: {'allergies': ['Bicillin L-AAspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:06:36 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:06:36 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:06:37 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:06:37 PM: INFO: {'allergies': ['Bicillin L-AAspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:07:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113e03d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:07:42 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:07:42 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:07:42 PM: INFO: {'allergies': ['Bicillin L-ACodeine PhosphateAspirin'], 'immunizations': ['tetanus toxoid, unspecified formulationInfluenza, seasonal, injectable, preservative freeInfluenza, seasonal, injectable, preservative freePneumococcal, 23-valent, adult'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:07:42 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:07:42 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:07:42 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:07:42 PM: INFO: {'allergies': ['Bicillin L-ACodeine PhosphateAspirin'], 'immunizations': ['tetanus toxoid, unspecified formulationInfluenza, seasonal, injectable, preservative freeInfluenza, seasonal, injectable, preservative freePneumococcal, 23-valent, adult'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:07:42 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:07:42 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113ea3458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:07:42 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:07:42 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:07:42 PM: INFO: {'allergies': ['Bicillin L-AAspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:07:42 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:07:42 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:07:42 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:07:42 PM: INFO: {'allergies': ['Bicillin L-AAspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:09:25 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113502d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:09:25 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:09:25 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:09:25 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:09:25 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:09:25 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:09:25 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:09:26 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:09:26 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:09:26 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135a1408> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:09:26 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:09:26 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:09:26 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:09:26 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:09:26 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:09:26 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:09:26 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:10:22 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113e4ed68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:10:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:10:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:10:22 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:10:22 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:10:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:10:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:10:22 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:10:22 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:10:22 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113ed3458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:10:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:10:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:10:22 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:10:22 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:10:22 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:10:22 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:10:22 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:03 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113d0fdb8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:03 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:03 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:03 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:03 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:03 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:03 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:03 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:03 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:11:03 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113db14a8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:03 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:03 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:03 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:03 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:03 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:03 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:03 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:31 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113628db8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:31 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:31 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:31 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:11:31 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:31 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:31 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:32 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:11:32 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:11:32 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136c7458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:32 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:32 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:32 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:11:32 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:32 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:32 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:32 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:11:51 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d09db8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:51 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:51 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:51 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:51 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:11:51 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112daa4a8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:11:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:51 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:11:51 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:11:51 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:11:51 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:11:51 PM: WARNING: Could not parse allergies!{'allergies': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:12:16 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1134ffdb8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:12:16 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:12:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:12:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:12:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:12:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:12:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:12:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildCodeine Phosphate Onset: Not Indicated Shortness of breath MildAspirin Onset: Not Indicated Hives Moderate'], 'immunizations': ['tetanus toxoid, unspecified formulation 2007-01-04 HistoricalInfluenza, seasonal, injectable, preservative free 2009-11-01 HistoricalInfluenza, seasonal, injectable, preservative free 2010-09-10 HistoricalPneumococcal, 23-valent, adult 2012-08-06 Historical'], 'procedures': ['']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:12:17 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:12:17 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1135a0458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:12:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:12:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:12:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:12:17 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:12:17 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:12:17 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:12:17 PM: INFO: {'allergies': ['Bicillin L-A Onset: Not Indicated Hives Very MildAspirin Onset: Not Indicated Nausea Mild'], 'immunizations': ['No immunizations administered during visit Not Applicable Not Applicable'], 'procedures': ['Standard chest X-ray (procedure) Performed: 2013-12-18']} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:13:34 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112d1bdb8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:13:34 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:13:34 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:13:34 PM: INFO: {'allergies': [['Bicillin L-A', 'Codeine Phosphate', 'Aspirin']], 'immunizations': [['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult']], 'procedures': [[]]} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:13:34 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:13:34 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:13:34 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:13:34 PM: INFO: {'allergies': [['Bicillin L-A', 'Codeine Phosphate', 'Aspirin']], 'immunizations': [['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult']], 'procedures': [[]]} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:13:34 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 197
04/07/2020 11:13:34 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x112dbc458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:13:34 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:13:34 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:13:34 PM: INFO: {'allergies': [['Bicillin L-A', 'Aspirin']], 'immunizations': [['No immunizations administered during visit']], 'procedures': [['Standard chest X-ray (procedure)']]} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:13:34 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:13:34 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:13:34 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:13:34 PM: INFO: {'allergies': [['Bicillin L-A', 'Aspirin']], 'immunizations': [['No immunizations administered during visit']], 'procedures': [['Standard chest X-ray (procedure)']]} @ ParserClass.py : getAllergiesDict: --> line 121
04/07/2020 11:14:38 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113423db8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:14:38 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:14:38 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:14:39 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:14:39 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:14:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:14:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:14:39 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:14:39 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/07/2020 11:14:39 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1134c4458> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:14:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:14:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:14:39 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:14:39 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:14:39 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:14:39 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:14:39 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:15:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113648d68> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:15:11 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:15:11 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:15:11 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:15:11 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:15:11 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:15:11 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:15:11 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:15:11 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/07/2020 11:15:11 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x1136cf408> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:15:11 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:15:11 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:15:11 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:15:11 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:15:11 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:15:11 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:15:11 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:28 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113b13db8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:16:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:28 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:16:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:28 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/07/2020 11:16:28 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113d04318> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:16:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:28 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:16:28 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:28 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:28 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:46 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113618db8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:16:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:46 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:46 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:16:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:46 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:46 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/07/2020 11:16:46 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x113809318> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:16:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:46 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:46 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:16:46 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:46 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:46 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:57 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x106249cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:16:57 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:57 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:57 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:16:57 PM: DEBUG: Demographics dictionary parsed: {'given': ['Mary'], 'family': ['Grant'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19870321', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:16:57 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:16:57 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:16:57 PM: INFO: {'allergies': ['Bicillin L-A', 'Aspirin'], 'immunizations': ['No immunizations administered during visit'], 'procedures': ['Standard chest X-ray (procedure)']} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:17:00 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x105072cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:17:00 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:17:00 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:17:00 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:17:00 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:17:00 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:17:00 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:17:00 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:17:00 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/07/2020 11:17:58 PM: DEBUG: Root parsed: <Element '{urn:hl7-org:v3}ClinicalDocument' at 0x102649cc8> @ ParserClass.py : getRoot: --> line 43
04/07/2020 11:17:58 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:17:58 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:17:58 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:17:58 PM: DEBUG: Demographics dictionary parsed: {'given': ['Isabella'], 'family': ['Jones'], 'address': ['No Address Indicated'], 'city': ['No City Indicated'], 'state': ['CA'], 'postalcode': ['99999'], 'birthtime': '19470501', 'gender': 'Female'} @ ParserClass.py : __init__: --> line 25
04/07/2020 11:17:58 PM: INFO: Before Soup! @ ParserClass.py : getSoupFromFile: --> line 55
04/07/2020 11:17:58 PM: INFO: After soup! @ ParserClass.py : getSoupFromFile: --> line 58
04/07/2020 11:17:58 PM: INFO: {'allergies': ['Bicillin L-A', 'Codeine Phosphate', 'Aspirin'], 'immunizations': ['tetanus toxoid, unspecified formulation', 'Influenza, seasonal, injectable, preservative free', 'Influenza, seasonal, injectable, preservative free', 'Pneumococcal, 23-valent, adult'], 'procedures': []} @ ParserClass.py : getAllergiesDict: --> line 124
04/07/2020 11:17:58 PM: INFO: Field given is in list format, returning Isabella @ ParserClass.py : getFieldFromDict: --> line 200
04/12/2020 02:15:54 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/12/2020 02:15:54 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/12/2020 02:15:54 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/12/2020 02:15:54 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/12/2020 02:15:54 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/12/2020 02:15:54 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/12/2020 02:15:54 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/12/2020 02:15:54 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/12/2020 02:15:54 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/12/2020 02:15:54 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/12/2020 02:15:54 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/12/2020 02:15:54 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/12/2020 02:15:54 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/12/2020 02:15:54 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/12/2020 02:16:25 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/12/2020 02:16:25 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/12/2020 02:16:25 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/12/2020 02:16:25 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/12/2020 02:16:25 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/12/2020 02:16:25 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/12/2020 02:16:25 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/12/2020 02:16:25 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/12/2020 02:16:25 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/12/2020 02:16:25 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/12/2020 02:16:25 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/12/2020 02:16:25 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/12/2020 02:16:25 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/12/2020 02:16:25 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/12/2020 02:16:25 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/12/2020 02:16:25 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/12/2020 02:16:25 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/12/2020 02:16:25 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/12/2020 02:16:25 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/12/2020 02:16:25 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/12/2020 02:16:25 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/12/2020 02:16:25 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/12/2020 02:16:26 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/12/2020 02:16:26 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/12/2020 02:21:06 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/12/2020 02:21:06 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/12/2020 02:21:06 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/12/2020 02:21:06 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/12/2020 02:21:06 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/12/2020 02:21:06 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/12/2020 02:21:06 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/12/2020 02:21:06 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/12/2020 02:21:06 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/12/2020 02:21:06 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/12/2020 02:21:06 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/12/2020 02:21:06 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/12/2020 02:21:06 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/12/2020 02:21:06 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/12/2020 02:21:06 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/12/2020 02:21:06 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/12/2020 02:21:06 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/12/2020 02:21:06 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/12/2020 02:21:06 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/12/2020 02:21:06 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/12/2020 02:21:06 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/12/2020 02:21:06 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/12/2020 02:21:06 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/12/2020 02:21:06 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/16/2020 01:14:48 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/16/2020 01:14:48 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/16/2020 01:14:48 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/16/2020 01:14:48 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/16/2020 01:14:48 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/16/2020 01:14:48 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/16/2020 01:14:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/16/2020 01:14:48 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/16/2020 01:14:48 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/16/2020 01:14:48 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/16/2020 01:14:48 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/16/2020 01:14:48 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/16/2020 01:14:48 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/16/2020 01:14:48 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/16/2020 01:14:48 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/16/2020 01:14:48 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/16/2020 01:14:48 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/16/2020 01:14:48 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/16/2020 01:14:48 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/16/2020 01:14:48 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/16/2020 01:14:48 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/16/2020 01:14:52 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/16/2020 01:14:52 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/16/2020 01:14:52 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/18/2020 11:56:39 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/18/2020 11:56:39 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/18/2020 11:56:39 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/18/2020 11:56:39 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/18/2020 11:56:39 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/18/2020 11:56:39 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/18/2020 11:56:39 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/18/2020 11:56:39 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/18/2020 11:56:39 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/18/2020 11:56:39 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/18/2020 11:56:39 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/18/2020 11:56:39 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/18/2020 11:56:39 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/18/2020 11:56:39 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/18/2020 11:56:39 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/18/2020 11:56:39 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/18/2020 11:56:39 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/18/2020 11:56:39 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/18/2020 11:56:39 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/18/2020 11:56:39 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/18/2020 11:56:39 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/18/2020 11:56:40 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/18/2020 11:56:41 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/18/2020 11:56:41 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/18/2020 11:56:41 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/18/2020 11:56:41 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/18/2020 11:56:41 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/18/2020 11:56:41 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/18/2020 11:56:41 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/18/2020 11:56:41 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/18/2020 11:56:41 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/18/2020 11:56:41 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/18/2020 11:56:41 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/18/2020 11:56:41 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/19/2020 12:05:14 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:05:14 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:05:14 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:05:14 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:05:14 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:05:14 AM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:05:14 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:05:14 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:05:14 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:05:14 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:05:14 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:05:14 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:05:14 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:05:14 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:05:14 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:05:14 AM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:05:14 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:05:14 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:05:14 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:05:14 AM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:05:14 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:05:14 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:05:15 AM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:05:15 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/19/2020 12:05:15 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:05:15 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:05:15 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:05:15 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:05:15 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:05:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:05:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:05:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:05:15 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:05:15 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:05:15 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:05:15 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:05:15 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:05:15 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:05:15 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:05:15 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:05:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:05:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:05:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:05:15 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:05:15 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:05:15 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:05:15 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:05:15 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:05:15 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:05:15 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:17:57 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:17:57 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:17:57 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:17:57 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:17:57 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:17:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:17:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:17:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:17:57 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:17:57 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:17:57 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:17:57 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:17:57 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:17:57 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:17:57 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:17:57 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:17:57 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:17:57 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:17:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:17:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:17:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:17:57 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:17:57 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:17:57 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:17:57 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:17:57 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:17:57 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/19/2020 12:17:57 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:17:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:17:57 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:17:57 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/19/2020 12:17:57 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/19/2020 12:17:57 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/19/2020 12:17:57 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:17:57 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:17:57 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:17:57 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:17:57 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:17:57 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:17:57 AM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/19/2020 12:17:57 AM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/19/2020 12:17:57 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/19/2020 12:17:57 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 12:17:57 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 12:17:57 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:17:57 AM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:17:57 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:17:57 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 12:17:57 AM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:17:57 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:17:57 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/19/2020 12:17:57 AM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/19/2020 12:18:14 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:18:14 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:18:14 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:18:14 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:18:14 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:18:14 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:18:14 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:18:14 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:18:14 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:18:14 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:18:14 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:18:14 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:18:14 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:18:14 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:18:14 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:18:14 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:18:14 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:18:14 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:18:14 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:18:14 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:18:14 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:18:14 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:18:14 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:18:14 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:18:14 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:18:14 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:18:14 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 89
04/19/2020 12:18:14 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 51
04/19/2020 12:18:14 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:18:14 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:18:14 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:18:14 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:18:14 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:18:14 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:18:14 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:18:14 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:18:14 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:18:14 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:18:14 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:18:14 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:18:14 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/19/2020 12:18:14 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:18:14 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:18:14 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:18:14 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/19/2020 12:18:14 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/19/2020 12:18:14 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/19/2020 12:18:14 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:18:14 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:18:14 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:18:14 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:18:14 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:18:14 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:18:14 AM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/19/2020 12:18:14 AM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/19/2020 12:18:14 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/19/2020 12:18:14 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 12:18:14 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 12:18:14 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:18:14 AM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:18:14 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:18:14 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 12:18:14 AM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:18:14 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:18:14 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/19/2020 12:18:14 AM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/19/2020 12:20:25 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:20:25 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:20:25 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:20:25 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:20:25 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:20:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:20:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:20:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:20:25 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:20:25 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:20:25 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:20:25 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:20:25 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:20:25 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:20:25 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:20:25 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:20:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:20:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:20:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:20:25 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:20:25 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:20:25 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:20:25 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:20:25 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:20:26 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:20:26 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:20:26 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 89
04/19/2020 12:20:26 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 51
04/19/2020 12:20:26 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:20:43 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:20:43 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:20:43 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:20:43 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:20:43 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:20:43 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:20:43 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:20:43 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:20:43 AM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:20:43 AM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:20:43 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:20:43 AM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/19/2020 12:20:43 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:20:43 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:20:43 AM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:20:43 AM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 100
04/19/2020 12:20:43 AM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 105
04/19/2020 12:20:43 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/19/2020 12:20:43 AM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:20:43 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:20:43 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:20:43 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:20:43 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:20:43 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:20:43 AM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/19/2020 12:20:43 AM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/19/2020 12:20:43 AM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/19/2020 12:20:43 AM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:36.800-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/19/2020 12:20:43 AM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/19/2020 12:20:43 AM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:20:43 AM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:20:43 AM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:20:43 AM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/19/2020 12:20:43 AM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:20:43 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:20:43 AM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/19/2020 12:20:43 AM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/19/2020 12:22:22 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:22:22 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:22:22 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:22:22 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:22:22 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:22:22 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:22:22 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:22:22 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:22:22 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:22:22 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:22:22 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:22:22 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:22:22 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:22:22 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:22:22 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:22:22 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:22:22 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:22:22 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:22:22 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:22:22 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:22:22 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:22:22 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:22:22 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:22:22 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:22:22 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:22:22 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:22:22 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 90
04/19/2020 12:22:23 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:22:23 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:23:28 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:23:28 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:23:28 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:23:28 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:23:28 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:23:28 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:23:28 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:23:28 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:23:28 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:23:28 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:23:28 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:23:28 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:23:28 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:23:28 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:23:28 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:23:28 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:23:28 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:23:28 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:23:28 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:23:28 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:23:28 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:23:28 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:23:28 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:23:29 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:23:29 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:23:29 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:23:29 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 90
04/19/2020 12:23:29 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:23:29 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:23:57 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:23:57 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:23:57 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:23:57 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:23:57 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:23:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:23:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:23:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:23:57 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:23:57 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:23:57 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:23:57 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:23:57 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:23:57 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:23:57 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:23:57 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:23:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:23:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:23:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:23:57 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:23:57 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:23:57 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:23:57 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:23:57 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:23:57 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:23:57 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:23:57 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 91
04/19/2020 12:23:57 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:23:57 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 23
04/19/2020 12:24:32 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:24:32 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:24:32 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:24:32 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:24:32 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:24:32 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:24:32 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:24:32 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:24:32 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:24:32 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:24:32 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:24:32 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:24:32 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:24:32 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:24:32 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:24:32 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:24:32 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:24:32 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:24:32 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:24:32 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:24:32 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:24:32 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:24:32 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:24:32 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:24:32 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:24:32 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:24:32 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:24:32 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:24:32 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 23
04/19/2020 12:24:55 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:24:55 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:24:55 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:24:55 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:24:55 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:24:55 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:24:55 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:24:55 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:24:55 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:24:55 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:24:55 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:24:55 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:24:55 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:24:55 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:24:55 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:24:55 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:24:55 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:24:55 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:24:55 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:24:55 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:24:55 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:24:55 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:24:55 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:24:55 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:24:55 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:24:55 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:24:55 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:24:55 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:24:55 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:25:17 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:25:17 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:25:17 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:25:17 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:25:17 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:25:17 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:25:17 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:25:17 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:25:17 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:25:17 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:25:17 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:25:17 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:25:17 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:25:17 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:25:17 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:25:17 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:25:17 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:25:17 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:25:17 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:25:17 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:25:17 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:25:17 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:25:17 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:25:17 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:25:17 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:25:17 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:25:17 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:25:17 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:25:17 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:25:33 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:25:33 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:25:33 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:25:33 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:25:33 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:25:33 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:25:33 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:25:33 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:25:33 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:25:33 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:25:33 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:25:33 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:25:33 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:25:33 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:25:33 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:25:33 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:25:33 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:25:33 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:25:33 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:25:33 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:25:33 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:25:33 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:25:33 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:25:33 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:25:33 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:25:33 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:25:33 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:25:33 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:25:33 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:26:12 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:26:12 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:26:12 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:26:12 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:26:12 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:12 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:12 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:12 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:12 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:12 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:12 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:26:12 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:26:12 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:26:12 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:26:12 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:26:12 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:12 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:12 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:12 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:12 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:12 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:12 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:26:12 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:26:12 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:26:14 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:26:14 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:26:14 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:26:14 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:26:14 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:26:23 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:26:23 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:26:23 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:26:23 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:26:23 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:23 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:23 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:23 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:23 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:23 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:23 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:26:23 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:26:23 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:26:23 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:26:23 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:26:23 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:23 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:23 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:23 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:23 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:23 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:23 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:26:23 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:26:23 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:26:23 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:26:23 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:26:23 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:26:23 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:26:23 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:26:38 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:26:38 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:26:38 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:26:38 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:26:38 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:38 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:38 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:38 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:38 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:38 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:26:38 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:26:38 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:26:38 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:26:38 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:26:38 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:38 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:38 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:38 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:38 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:38 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:26:38 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:26:38 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:26:38 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:26:38 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:26:38 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:26:38 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:26:38 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:26:57 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:26:57 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:26:57 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:26:57 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:26:57 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:57 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:57 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:57 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:26:57 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:26:57 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:26:57 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:26:57 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:26:57 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:26:57 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:26:57 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:26:57 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:26:57 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:26:57 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:26:57 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:26:57 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:26:57 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:26:58 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:26:58 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:26:58 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 93
04/19/2020 12:26:58 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:26:58 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:27:31 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:27:31 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:27:31 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:27:31 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:27:31 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:27:31 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:27:31 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:27:31 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:27:31 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:27:31 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:27:31 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:27:31 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:27:31 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:27:31 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:27:31 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:27:31 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:27:31 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:27:31 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:27:31 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:27:31 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:27:31 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:27:31 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:27:31 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:27:31 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:27:31 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:27:31 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:27:31 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 92
04/19/2020 12:27:31 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:27:31 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:27:31 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:27:31 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:33:11 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:33:11 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:33:11 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:33:11 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:33:11 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:33:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:33:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:33:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:33:11 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:33:11 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:33:11 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:33:11 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:33:11 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:33:11 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:33:11 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:33:11 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:33:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:33:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:33:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:33:11 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:33:11 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:33:11 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:33:11 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:33:14 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:33:15 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:33:15 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:33:15 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 103
04/19/2020 12:33:15 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:33:15 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:33:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 82
04/19/2020 12:33:15 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 89
04/19/2020 12:33:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 82
04/19/2020 12:33:15 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 89
04/19/2020 12:33:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 82
04/19/2020 12:33:15 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 89
04/19/2020 12:33:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 82
04/19/2020 12:33:15 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 89
04/19/2020 12:33:15 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:33:15 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:33:42 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:33:42 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:33:42 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:33:42 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:33:42 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:33:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:33:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:33:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:33:42 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:33:42 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:33:42 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:33:42 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:33:42 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:33:42 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:33:42 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:33:42 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:33:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:33:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:33:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:33:42 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:33:42 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:33:42 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:33:42 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:33:42 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:33:42 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:33:42 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:33:42 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:33:42 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:33:42 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:33:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:33:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:33:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:33:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:33:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:33:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:33:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:33:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:33:42 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:33:42 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:34:35 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:34:35 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:34:35 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:34:35 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:34:35 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:34:35 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:34:35 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:34:35 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:34:35 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:34:35 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:34:35 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:34:35 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:34:35 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:34:35 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:34:35 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:34:35 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:34:35 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:34:35 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:34:35 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:34:35 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:34:35 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:34:35 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:34:35 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:34:35 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:34:35 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:34:35 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:34:35 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:34:35 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:34:35 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:34:35 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:34:35 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:34:35 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:34:35 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:34:35 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:34:35 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:34:35 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:34:35 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:34:35 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:34:35 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:35:12 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:35:12 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:35:12 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:35:12 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:35:12 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:35:12 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:35:12 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:35:12 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:35:12 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:35:12 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:35:12 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:35:12 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:35:12 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:35:12 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:35:12 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:35:12 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:35:12 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:35:12 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:35:12 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:35:12 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:35:12 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:35:12 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:35:12 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:35:12 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:35:13 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:35:13 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:35:13 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 105
04/19/2020 12:35:13 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:35:13 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:35:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:13 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:13 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:13 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:13 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:13 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:35:13 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:35:48 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:35:48 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:35:48 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:35:48 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:35:48 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:35:48 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:35:48 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:35:48 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:35:48 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:35:48 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:35:48 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:35:48 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:35:48 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:35:48 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:35:48 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:35:48 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:35:48 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:35:48 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:35:48 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:35:48 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:35:48 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:35:48 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:35:48 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:35:48 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:35:48 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:35:48 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:35:48 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 105
04/19/2020 12:35:48 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:35:48 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:35:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:48 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:48 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:48 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:35:48 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:35:48 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:35:48 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:36:41 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:36:41 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:36:41 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:36:41 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:36:41 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:36:41 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:36:41 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:36:41 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:36:41 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:36:41 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:36:41 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:36:41 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:36:41 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:36:41 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:36:41 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:36:41 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:36:41 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:36:41 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:36:41 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:36:41 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:36:41 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:36:41 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:36:41 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:36:41 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:36:42 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:36:42 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:36:42 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 105
04/19/2020 12:36:42 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:36:42 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:36:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:36:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:36:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:36:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:36:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:36:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:36:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:36:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:36:42 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:36:42 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:36:55 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:36:55 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:36:55 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:36:55 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:36:55 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:36:55 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:36:55 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:36:55 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:36:55 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:36:55 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:36:55 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:36:55 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:36:55 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:36:55 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:36:55 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:36:55 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:36:55 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:36:55 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:36:55 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:36:55 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:36:55 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:36:55 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:36:55 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:36:55 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:36:55 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:36:55 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:36:55 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:36:55 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:36:55 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:36:55 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:36:55 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:36:55 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:36:55 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:36:55 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:36:55 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:36:55 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:36:55 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:36:55 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:36:55 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:37:11 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:37:11 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:37:11 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:37:11 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:37:11 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:11 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:11 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:11 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:37:11 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:37:11 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:37:11 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:37:11 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:37:11 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:11 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:11 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:11 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:37:11 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:37:11 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:37:12 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:37:12 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:37:12 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:37:12 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:37:12 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:37:12 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:12 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:12 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:12 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:12 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:12 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:12 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:12 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:12 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:37:12 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:37:42 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:37:42 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:37:42 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:37:42 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:37:42 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:42 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:42 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:42 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:37:42 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:37:42 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:37:42 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:37:42 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:37:42 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:42 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:42 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:42 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:37:42 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:37:42 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:37:42 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:37:42 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:37:42 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:37:42 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:37:42 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:37:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:42 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:42 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:37:42 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:37:56 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:37:56 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:37:56 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:37:56 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:37:56 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:56 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:56 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:56 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:56 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:56 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:56 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:37:56 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:37:56 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:37:56 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:37:56 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:37:56 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:37:56 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:37:56 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:37:56 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:37:56 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:37:56 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:37:56 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:37:56 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:37:56 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:37:56 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:37:56 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:37:56 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 12:37:56 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:37:56 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:37:56 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:56 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:56 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:56 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:56 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:56 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:56 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 83
04/19/2020 12:37:56 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 12:37:56 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:37:56 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:38:59 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:38:59 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:38:59 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:38:59 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:38:59 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:38:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:38:59 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:38:59 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:38:59 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:38:59 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:38:59 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:38:59 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:38:59 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:38:59 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:38:59 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:38:59 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:38:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:38:59 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:38:59 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:38:59 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:38:59 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:38:59 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:38:59 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:38:59 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:38:59 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:38:59 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:38:59 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 105
04/19/2020 12:38:59 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:38:59 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:38:59 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:38:59 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:38:59 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:38:59 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 84
04/19/2020 12:38:59 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:38:59 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 12:38:59 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:38:59 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {}, '87': {}, '88': {}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:41:41 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:41:41 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:41:41 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:41:41 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:41:41 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:41:41 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:41:41 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:41:41 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:41:41 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:41:41 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:41:41 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:41:41 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:41:41 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:41:41 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:41:41 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:41:41 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:41:41 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:41:41 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:41:41 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:41:41 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:41:41 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:41:41 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:41:41 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:41:41 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:41:41 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:41:41 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:41:41 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 109
04/19/2020 12:41:41 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 52
04/19/2020 12:41:41 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 33
04/19/2020 12:41:41 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:41:41 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 96
04/19/2020 12:41:41 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 96
04/19/2020 12:41:41 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:41:41 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 96
04/19/2020 12:41:41 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 96
04/19/2020 12:41:41 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 19
04/19/2020 12:41:41 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, '87': {}, '88': {'substances': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}} @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:42:10 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:42:10 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:42:10 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:42:10 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:42:10 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:42:10 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:42:10 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:42:10 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:42:10 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:42:10 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:42:10 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:42:10 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:42:10 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:42:10 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:42:10 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:42:10 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:42:10 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:42:10 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:42:10 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:42:10 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:42:10 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:42:10 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:42:10 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:42:10 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:42:10 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:42:10 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:42:10 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:42:10 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:42:10 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:42:10 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:42:10 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:10 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:10 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:42:10 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:10 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:10 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:42:10 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, '87': {}, '88': {'substances': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:42:40 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:42:40 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:42:40 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:42:40 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:42:40 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:42:40 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:42:40 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:42:40 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:42:40 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:42:40 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:42:40 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:42:40 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:42:40 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:42:40 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:42:40 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:42:40 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:42:40 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:42:40 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:42:40 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:42:40 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:42:40 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:42:40 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:42:40 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:42:40 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:42:44 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:42:44 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:42:44 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:42:44 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:42:44 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:42:44 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:42:44 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:44 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:44 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:42:44 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:44 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 97
04/19/2020 12:42:44 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:42:44 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:43:09 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:43:09 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:43:09 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:43:09 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:43:09 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:09 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:09 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:09 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:09 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:09 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:09 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:43:09 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:43:09 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:43:09 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:43:09 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:43:09 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:09 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:09 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:09 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:09 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:09 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:09 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:43:09 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:43:09 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:43:09 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:43:09 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:43:09 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:43:09 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:43:09 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:43:09 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:09 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:43:09 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:43:09 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:09 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:43:09 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 98
04/19/2020 12:43:09 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:43:09 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:43:32 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:43:32 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:43:32 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:43:32 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:43:32 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:32 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:32 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:32 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:32 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:32 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:32 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:43:32 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:43:32 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:43:32 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:43:32 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:43:32 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:32 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:32 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:32 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:32 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:32 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:32 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:43:32 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:43:32 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:43:32 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:43:32 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:43:32 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:43:32 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:43:32 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:43:32 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:32 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:32 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:32 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:32 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:32 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:32 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:43:32 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:43:46 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:43:46 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:43:46 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:43:46 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:43:46 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:46 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:46 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:46 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:46 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:46 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:46 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:43:46 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:43:46 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:43:46 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:43:46 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:43:46 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:43:46 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:43:46 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:43:46 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:43:46 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:43:46 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:43:46 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:43:46 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:43:46 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:43:47 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:43:47 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:43:47 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:43:47 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:43:47 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:43:47 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:47 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:47 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:47 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:43:47 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:47 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:43:47 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:43:47 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:44:01 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:44:01 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:44:01 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:44:01 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:44:01 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:44:01 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:44:01 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:44:01 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:44:01 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:44:01 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:44:01 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:44:01 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:44:01 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:44:01 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:44:01 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:44:01 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:44:01 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:44:01 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:44:01 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:44:01 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:44:01 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:44:01 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:44:01 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:44:01 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:44:01 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:44:01 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:44:01 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 113
04/19/2020 12:44:01 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:44:01 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:44:01 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:44:01 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:01 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:01 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:44:01 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:01 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:01 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:44:01 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:44:50 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:44:50 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:44:50 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:44:50 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:44:50 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:44:50 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:44:50 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:44:50 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:44:50 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:44:50 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:44:50 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:44:50 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:44:50 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:44:50 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:44:50 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:44:50 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:44:50 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:44:50 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:44:50 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:44:50 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:44:50 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:44:50 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:44:50 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:44:50 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:44:50 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:44:50 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:44:50 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 113
04/19/2020 12:44:50 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:44:50 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:44:50 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:44:50 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:50 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:50 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:44:50 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:50 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:44:50 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:44:50 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:46:08 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:46:08 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:46:08 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:46:08 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:46:08 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:08 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:08 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:08 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:08 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:08 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:08 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:46:08 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:46:08 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:46:08 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:46:08 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:46:08 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:08 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:08 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:08 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:08 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:08 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:08 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:46:08 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:46:08 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:46:08 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:46:08 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:46:08 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 113
04/19/2020 12:46:08 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:46:08 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:46:08 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:08 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:46:08 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:46:08 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:08 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:46:08 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 100
04/19/2020 12:46:08 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:46:08 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:46:25 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:46:25 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:46:25 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:46:25 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:46:25 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:25 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:25 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:25 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:46:25 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:46:25 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:46:25 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:46:25 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:46:25 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:25 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:25 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:25 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:46:25 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:46:25 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:46:25 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:46:25 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:46:25 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:46:25 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:46:25 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:46:25 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:25 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:25 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:25 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:25 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:25 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:25 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:46:25 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:46:38 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:46:38 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:46:38 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:46:38 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:46:38 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:38 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:38 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:38 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:38 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:38 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:46:38 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:46:38 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:46:38 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:46:38 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:46:38 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:46:38 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:46:38 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:46:38 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:46:38 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:46:38 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:46:38 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:46:38 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:46:38 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:46:38 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:46:38 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:46:38 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:46:38 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:46:38 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:46:38 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:38 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:38 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:38 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:46:38 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:38 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:46:38 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:46:38 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:47:03 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:47:03 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:47:03 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:47:03 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:47:03 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:03 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:03 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:03 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:03 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:03 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:03 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:47:03 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:47:03 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:47:03 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:47:03 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:47:03 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:03 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:03 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:03 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:03 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:03 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:03 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:47:03 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:47:03 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:47:04 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:47:04 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:47:04 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:47:04 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:47:04 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:47:04 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:04 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:04 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:04 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:04 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:04 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:04 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:47:04 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:47:24 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:47:24 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:47:24 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:47:24 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:47:24 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:24 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:24 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:24 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:24 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:24 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:24 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:47:24 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:47:24 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:47:24 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:47:24 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:47:24 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:24 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:24 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:24 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:24 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:24 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:24 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:47:24 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:47:24 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:47:24 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:47:24 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:47:24 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:47:24 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:47:24 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:47:24 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:24 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:24 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:24 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:24 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:24 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:24 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:47:24 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:47:33 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:47:33 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:47:33 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:47:33 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:47:33 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:33 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:33 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:33 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:33 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:33 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:33 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:47:33 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:47:33 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:47:33 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:47:33 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:47:33 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:33 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:33 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:33 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:33 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:33 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:33 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:47:33 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:47:33 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:47:34 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:47:34 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:47:34 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:47:34 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:47:34 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:47:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:34 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:34 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:34 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:34 AM: WARNING: Error parsing manifestations! @ AllergiesJSONResponseClass.py : parseResource: --> line 99
04/19/2020 12:47:34 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:47:34 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:47:45 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:47:45 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:47:45 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:47:45 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:47:45 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:45 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:45 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:45 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:45 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:45 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:45 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:47:45 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:47:45 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:47:45 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:47:45 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:47:45 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:47:45 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:47:45 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:47:45 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:47:45 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:47:45 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:47:45 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:47:45 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:47:45 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:47:45 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:47:45 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:47:45 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:47:45 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:47:45 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:47:45 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:45 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:47:45 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:47:45 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:48:24 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:48:24 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:48:24 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:48:24 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:48:24 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:48:24 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:48:24 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:48:24 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:48:24 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:48:24 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:48:24 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:48:24 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:48:24 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:48:24 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:48:24 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:48:24 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:48:24 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:48:24 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:48:24 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:48:24 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:48:24 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:48:24 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:48:24 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:48:24 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:48:24 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:48:24 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:48:24 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:48:24 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:48:24 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:48:24 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:48:24 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:48:24 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:48:24 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:48:37 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:48:37 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:48:37 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:48:37 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:48:37 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:48:37 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:48:37 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:48:37 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:48:37 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:48:37 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:48:37 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:48:37 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:48:37 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:48:37 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:48:37 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:48:37 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:48:37 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:48:37 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:48:37 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:48:37 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:48:37 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:48:37 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:48:37 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:48:37 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:48:37 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:48:37 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:48:37 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:48:37 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:48:37 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:48:37 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:48:37 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:48:37 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:48:37 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:51:30 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:51:30 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:51:30 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:51:30 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:51:30 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:51:30 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:51:30 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:51:30 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:51:30 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:51:30 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:51:30 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:51:30 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:51:30 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:51:30 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:51:30 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:51:30 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:51:30 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:51:30 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:51:30 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:51:30 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:51:30 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:51:30 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:51:30 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:51:30 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:51:30 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:51:30 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:51:30 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:51:30 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 54
04/19/2020 12:51:30 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 35
04/19/2020 12:51:30 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:51:30 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:51:30 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:51:30 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:51:47 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:51:47 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:51:47 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:51:47 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:51:47 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:51:47 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:51:47 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:51:47 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:51:47 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:51:47 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:51:47 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:51:47 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:51:47 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:51:47 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:51:47 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:51:47 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:51:47 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:51:47 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:51:47 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:51:47 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:51:47 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:51:47 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:51:47 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:51:47 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:51:47 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:51:47 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:51:47 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:51:47 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 54
04/19/2020 12:51:47 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 35
04/19/2020 12:51:47 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:51:47 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:51:47 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 24
04/19/2020 12:52:06 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:52:06 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:52:06 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:52:06 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:52:06 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:06 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:06 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:06 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:06 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:06 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:06 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:52:06 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:52:06 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:52:06 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:52:06 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:52:06 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:06 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:06 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:06 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:06 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:06 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:06 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:52:06 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:52:06 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:52:06 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:52:06 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:52:06 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:52:06 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:52:06 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:52:06 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:06 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:06 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:52:06 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:52:25 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:52:25 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:52:25 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:52:25 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:52:25 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:25 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:25 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:25 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:52:25 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:52:25 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:52:25 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:52:25 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:52:25 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:25 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:25 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:25 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:25 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:25 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:25 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:52:25 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:52:25 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:52:25 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:52:25 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:52:25 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:52:26 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:52:26 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:52:26 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:26 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:26 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 23
04/19/2020 12:52:40 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:52:40 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:52:40 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:52:40 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:52:40 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:40 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:40 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:40 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:40 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:40 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:40 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:52:40 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:52:40 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:52:40 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:52:40 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:52:40 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:40 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:40 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:40 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:40 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:40 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:40 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:52:40 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:52:40 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:52:40 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:52:40 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:52:40 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 110
04/19/2020 12:52:40 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 53
04/19/2020 12:52:40 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 34
04/19/2020 12:52:40 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:40 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 86
04/19/2020 12:52:40 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 20
04/19/2020 12:52:40 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 21
04/19/2020 12:52:59 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:52:59 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:52:59 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:52:59 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:52:59 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:59 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:59 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:59 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:59 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:59 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:52:59 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:52:59 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:52:59 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:52:59 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:52:59 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:52:59 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:52:59 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:52:59 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:52:59 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:52:59 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:52:59 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:52:59 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:52:59 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:53:00 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:53:00 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:53:00 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 111
04/19/2020 12:53:00 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 54
04/19/2020 12:53:00 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 35
04/19/2020 12:53:00 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:53:00 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 87
04/19/2020 12:53:00 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 24
04/19/2020 12:59:00 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:59:00 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:59:00 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:59:00 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:59:00 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:00 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:00 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:00 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:00 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:00 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:00 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:59:00 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:59:00 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:59:00 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:59:00 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:59:00 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:00 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:00 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:00 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:00 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:00 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:00 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:59:00 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:59:03 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:59:04 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:59:04 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:59:04 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:59:04 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 55
04/19/2020 12:59:04 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 36
04/19/2020 12:59:04 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:04 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:04 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:59:04 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 23
04/19/2020 12:59:27 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:59:27 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:59:27 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:59:27 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:59:27 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:27 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:27 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:27 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:27 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:27 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:27 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:59:27 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:59:27 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:59:27 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:59:27 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:59:27 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:27 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:27 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:27 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:27 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:27 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:27 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:59:27 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:59:27 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:59:27 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:59:27 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:59:27 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:59:27 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 55
04/19/2020 12:59:27 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 36
04/19/2020 12:59:27 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:27 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:27 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 12:59:46 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 12:59:46 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 12:59:46 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 12:59:46 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 12:59:46 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:46 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:46 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:46 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:46 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:46 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:46 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 12:59:46 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 12:59:46 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 12:59:46 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 12:59:46 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 12:59:46 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 12:59:46 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 12:59:46 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 12:59:46 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 12:59:46 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 12:59:46 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 12:59:46 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 12:59:46 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 12:59:46 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 12:59:46 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 12:59:46 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 12:59:46 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 112
04/19/2020 12:59:46 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 55
04/19/2020 12:59:46 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 36
04/19/2020 12:59:46 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:46 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 88
04/19/2020 12:59:46 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 22
04/19/2020 12:59:46 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 23
04/19/2020 01:00:26 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:00:26 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:00:26 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:00:26 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:00:26 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:00:26 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:00:26 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:00:26 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:00:26 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:00:26 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:00:26 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:00:26 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:00:26 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:00:26 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:00:26 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:00:26 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:00:26 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:00:26 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:00:26 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:00:26 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:00:26 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:00:26 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:00:26 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:00:26 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:00:26 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:00:26 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:00:26 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 114
04/19/2020 01:00:26 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 57
04/19/2020 01:00:26 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 38
04/19/2020 01:00:26 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 01:00:26 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 90
04/19/2020 01:00:26 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 27
04/19/2020 01:01:10 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:01:10 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:01:10 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:01:10 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:01:10 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:10 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:10 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:10 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:10 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:10 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:10 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:01:10 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:01:10 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:01:10 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:01:10 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:01:10 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:10 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:10 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:10 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:10 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:10 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:10 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:01:10 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:01:10 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:01:10 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:01:10 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:01:10 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 115
04/19/2020 01:01:10 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:01:10 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:01:10 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:10 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:10 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:01:10 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:01:28 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:01:28 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:01:28 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:01:28 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:01:28 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:28 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:28 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:28 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:28 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:28 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:28 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:01:28 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:01:28 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:01:28 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:01:28 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:01:28 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:28 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:28 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:28 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:28 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:28 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:28 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:01:28 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:01:28 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:01:28 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:01:28 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:01:28 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 115
04/19/2020 01:01:28 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:01:28 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:01:28 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:28 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:28 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 28
04/19/2020 01:01:34 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:01:34 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:01:34 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:01:34 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:01:34 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:34 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:34 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:34 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:01:34 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:01:34 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:01:34 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:01:34 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:01:34 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:01:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:01:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:01:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:01:34 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:01:34 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:01:34 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:01:34 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:01:34 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:01:34 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:01:34 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:01:34 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 115
04/19/2020 01:01:34 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:01:34 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:01:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:01:34 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:01:34 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:02:36 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:02:36 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:02:36 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:02:36 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:02:36 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:02:36 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:02:36 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:02:36 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:02:36 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:02:36 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:02:36 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:02:36 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:02:36 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:02:36 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:02:36 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:02:36 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:02:36 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:02:36 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:02:36 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:02:36 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:02:36 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:02:36 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:02:36 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:02:36 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:02:37 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:02:37 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:02:37 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 115
04/19/2020 01:02:37 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:02:37 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:02:37 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:02:37 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:02:37 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:02:37 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction'], 'manifestations': ['ASPIRIN', 'Bicillin L-A', 'Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:03:34 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:03:34 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:03:34 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:03:34 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:03:34 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:03:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:03:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:03:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:03:34 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:03:34 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:03:34 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:03:34 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:03:34 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:03:34 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:03:34 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:03:34 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:03:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:03:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:03:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:03:34 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:03:34 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:03:34 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:03:34 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:03:34 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:03:34 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:03:34 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:03:34 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 115
04/19/2020 01:03:34 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:03:34 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:03:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:03:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:03:34 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:03:34 AM: DEBUG: patientDictionaries: {'ai83726462664827': {'manifestations': ['Hives', 'Airway constriction']}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A'], 'manifestations': ['Hives', 'Airway constriction']}, '87': {'manifestations': ['Hives', 'Airway constriction']}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A'], 'manifestations': ['Hives', 'Airway constriction']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:09:11 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:09:11 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:09:11 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:09:11 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:09:11 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:09:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:09:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:09:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:09:11 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:09:11 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:09:11 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:09:11 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:09:11 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:09:11 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:09:11 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:09:11 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:09:11 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:09:11 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:09:11 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:09:11 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:09:11 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:09:11 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:09:11 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:09:14 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:09:14 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:09:14 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:09:14 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:09:14 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:09:14 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:09:14 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:09:14 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:09:14 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:09:14 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:14:15 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:14:15 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:14:15 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:14:15 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:14:15 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:15 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:15 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:15 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:14:15 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:14:15 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:14:15 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:14:15 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:14:15 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:15 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:15 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:15 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:14:15 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:14:15 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:14:16 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:14:16 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:14:16 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:14:16 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:14:16 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:14:16 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:16 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:16 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:14:16 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:14:44 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:14:44 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:14:44 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:14:44 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:14:44 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:44 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:44 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:44 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:44 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:44 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:44 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:14:44 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:14:44 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:14:44 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:14:44 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:14:44 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:44 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:44 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:44 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:44 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:44 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:44 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:14:44 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:14:44 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:14:44 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:14:44 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:14:44 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:14:44 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:14:44 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:14:44 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:44 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:44 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 28
04/19/2020 01:14:48 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:14:48 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:14:48 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:14:48 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:14:48 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:48 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:48 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:48 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:48 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:48 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:48 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:14:48 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:14:48 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:14:48 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:14:48 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:14:48 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:14:48 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:14:48 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:14:48 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:14:48 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:14:48 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:14:48 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:14:48 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:14:48 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:14:48 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:14:48 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:14:48 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:14:48 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:14:48 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:14:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:48 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:14:48 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:14:48 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:15:34 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:15:34 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:15:34 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:15:34 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:15:34 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:34 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:34 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:34 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:15:34 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:15:34 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:15:34 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:15:34 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:15:34 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:34 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:34 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:34 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:34 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:34 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:34 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:15:34 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:15:34 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:15:34 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:15:34 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:15:34 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:15:34 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:15:34 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:15:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:34 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:34 AM: ERROR: Could not initialize PatientJSONResponse! @ AllergiesJSONResponseClass.py : __init__: --> line 28
04/19/2020 01:15:42 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:15:42 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:15:42 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:15:42 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:15:42 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:42 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:42 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:42 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:15:42 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:15:42 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:15:42 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:15:42 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:15:42 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:42 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:42 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:42 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:42 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:42 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:42 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:15:42 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:15:42 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:15:42 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:15:42 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:15:42 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:15:42 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:15:42 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:15:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:42 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:42 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:15:42 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:15:54 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:15:54 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:15:54 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:15:54 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:15:54 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:54 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:54 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:54 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:54 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:54 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:54 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:15:54 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:15:54 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:15:54 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:15:54 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:15:54 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:15:54 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:15:54 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:15:54 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:15:54 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:15:54 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:15:54 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:15:54 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:15:54 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:15:54 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:15:54 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:15:54 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:15:54 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:15:54 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:15:54 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:54 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:15:54 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:15:54 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:16:15 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:16:15 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:16:15 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:16:15 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:16:15 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:16:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:16:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:16:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:16:15 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:16:15 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:16:15 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:16:15 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:16:15 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:16:15 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:16:15 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:16:15 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:16:15 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:16:15 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:16:15 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:16:15 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:16:15 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:16:15 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:16:15 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:16:15 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:16:15 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:16:15 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:16:15 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:16:15 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:16:15 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:16:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:16:15 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:16:15 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:16:15 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/19/2020 01:19:13 AM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/19/2020 01:19:13 AM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/19/2020 01:19:13 AM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/19/2020 01:19:13 AM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/19/2020 01:19:13 AM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:19:13 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:19:13 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:19:13 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:19:13 AM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:19:13 AM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:19:13 AM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/19/2020 01:19:13 AM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/19/2020 01:19:13 AM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/19/2020 01:19:13 AM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/19/2020 01:19:13 AM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/19/2020 01:19:13 AM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/19/2020 01:19:13 AM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/19/2020 01:19:13 AM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/19/2020 01:19:13 AM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/19/2020 01:19:13 AM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/19/2020 01:19:13 AM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/19/2020 01:19:13 AM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/19/2020 01:19:13 AM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/19/2020 01:19:13 AM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/19/2020 01:19:13 AM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/19/2020 01:19:13 AM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/19/2020 01:19:13 AM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 104
04/19/2020 01:19:13 AM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/19/2020 01:19:13 AM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-18T03:00:37.335-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:40.892-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/87', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '87', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T00:58:41.096-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/88', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '88', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-19T01:07:14.947-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/19/2020 01:19:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:19:13 AM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 91
04/19/2020 01:19:13 AM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/19/2020 01:19:13 AM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}, '87': {}, '88': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 01:01:18 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:01:18 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:01:18 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:01:18 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:01:18 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:01:18 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:01:18 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:01:18 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:01:18 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:01:18 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:01:18 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:01:18 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:01:18 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:01:18 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:01:18 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:01:18 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:01:18 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:01:18 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:01:18 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:01:18 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:01:18 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:01:19 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:01:19 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:01:19 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 01:01:19 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 01:01:19 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 01:01:19 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 01:01:19 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 01:01:19 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:01:19 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:01:19 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:01:19 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:01:19 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:01:19 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:01:19 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 01:01:19 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 01:01:19 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 01:01:19 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 01:01:19 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 01:01:19 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 01:01:19 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 01:01:19 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 01:01:19 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 109
04/20/2020 01:01:19 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 110
04/20/2020 01:01:19 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 111
04/20/2020 01:01:19 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 136
04/20/2020 01:01:19 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 141
04/20/2020 01:01:19 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 01:01:19 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 01:01:19 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 144
04/20/2020 03:59:28 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 03:59:28 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:00:41 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:00:41 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:02:35 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:02:35 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:12:40 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:12:40 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:13:09 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:13:09 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:13:19 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:13:19 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:13:39 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:13:39 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:13:58 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:13:58 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:14:19 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:14:19 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:14:47 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:14:47 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:14:53 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:14:53 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:15:04 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:15:04 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:15:20 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:15:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:16:44 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:16:44 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:16:56 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:16:56 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:17:42 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:17:42 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:17:50 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:17:50 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:18:50 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:18:50 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:07 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:07 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:07 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:07 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:08 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:37 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:37 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:37 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:19:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:19:37 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:30:01 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:30:01 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:30:01 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:30:01 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:30:01 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:30:01 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:30:01 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:30:01 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:30:01 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:30:01 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:30:01 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:30:01 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:30:01 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:30:01 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:30:01 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:30:01 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:30:01 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:30:01 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:30:01 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:30:01 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:30:01 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:30:01 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:30:01 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:30:01 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:30:01 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:30:01 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:30:01 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 105
04/20/2020 04:30:01 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:30:01 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.658-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:30:01 PM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 92
04/20/2020 04:30:01 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:30:01 PM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:33:25 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:33:25 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:33:25 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:33:25 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:33:25 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:33:25 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:33:25 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:33:25 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:33:25 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:33:25 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:33:25 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:33:25 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:33:25 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:33:25 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:33:25 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:33:25 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:33:25 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:33:25 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:33:25 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:33:25 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:33:25 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:33:25 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:33:25 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:33:25 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:33:25 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:33:25 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:33:25 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:33:25 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:33:25 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.658-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:33:25 PM: ERROR: Failed parsing patient dictionary from entries @ AllergiesJSONResponseClass.py : getDictFromEntries: --> line 79
04/20/2020 04:33:25 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:33:25 PM: DEBUG: patientDictionaries: {} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:33:34 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:33:34 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:33:34 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:33:34 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:33:34 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:33:34 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:33:34 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:33:34 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:33:34 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:33:34 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:33:34 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:33:34 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:33:34 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:33:34 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:33:34 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:33:34 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:33:34 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:33:34 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:33:34 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:33:34 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:33:34 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:33:34 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:33:34 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:33:34 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:33:34 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:33:34 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:33:34 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:33:34 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:33:34 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.658-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:33:34 PM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 95
04/20/2020 04:33:34 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:33:34 PM: DEBUG: patientDictionaries: {'ai83726462664827': {}, '86': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:34:20 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:34:20 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:34:20 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:34:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:34:20 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:20 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:20 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:34:20 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:34:20 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:20 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:34:20 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:34:20 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:34:20 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:34:20 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:34:20 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:20 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:20 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:34:20 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:34:20 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:20 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:34:20 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:34:20 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:34:20 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:34:20 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:34:20 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:34:20 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:34:20 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.658-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:34:20 PM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 95
04/20/2020 04:34:20 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:34:20 PM: DEBUG: patientDictionaries: {'siimsally': {}, 'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:34:20 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:34:20 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:34:20 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:20 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:20 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:34:20 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:34:20 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:20 PM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:34:20 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:34:20 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:34:20 PM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:34:20 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:34:20 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:34:20 PM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:34:20 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:34:20 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:34:20 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:34:20 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:34:20 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:34:20 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:34:20 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:34:20 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:34:20 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:34:20 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:34:20 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:34:20 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:34:20 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:34:20 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:34:20 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:34:20 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:34:20 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:34:20 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:34:20 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:34:20 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:34:20 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:34:20 PM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 04:35:11 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 04:35:11 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 04:35:11 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:35:11 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:35:11 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:11 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:11 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:11 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:35:11 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:35:11 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:11 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:35:11 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:35:11 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 04:35:11 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 04:35:11 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:35:11 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:11 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:11 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:11 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:35:11 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:35:11 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:11 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:35:11 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:35:11 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:35:11 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:35:11 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:35:11 PM: INFO: Creating Allergies JSON Response Instance @ AllergiesJSONResponseClass.py : createAllergyJSONResponse: --> line 108
04/20/2020 04:35:11 PM: ERROR: Could not parse entries from JSON response @ AllergiesJSONResponseClass.py : getAllergyEntriesFromResponse: --> line 58
04/20/2020 04:35:11 PM: DEBUG: Allergy entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/ai83726462664827', 'resource': {'resourceType': 'AllergyIntolerance', 'id': 'ai83726462664827', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.658-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimsally'}, 'recordedDate': '2008-05-24', 'reaction': [{'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}, {'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/AllergyIntolerance/86', 'resource': {'resourceType': 'AllergyIntolerance', 'id': '86', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T14:03:19.806-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">Penicillin - Hives and Airway compromise</div>'}, 'type': 'allergy', 'category': ['medication'], 'criticality': 'high', 'patient': {'reference': 'Patient/siimjoe'}, 'recordedDate': '2008-05-24', 'reaction': [{'substance': {'coding': [{'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '1191', 'display': 'ASPIRIN'}, {'system': 'http://www.nlm.nih.gov/research/umls/rxnorm', 'code': '215674', 'display': 'Bicillin L-A'}]}, 'manifestation': [{'coding': [{'system': 'http://snomed.info/sct', 'code': '247472004', 'display': 'Hives'}, {'system': 'http://snomed.info/sct', 'code': '44416002', 'display': 'Airway constriction'}]}]}]}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ AllergiesJSONResponseClass.py : getAllergiesEntries: --> line 39
04/20/2020 04:35:11 PM: WARNING: Error parsing substances @ AllergiesJSONResponseClass.py : parseResource: --> line 95
04/20/2020 04:35:11 PM: INFO: Created PatientJSONResponse object @ AllergiesJSONResponseClass.py : __init__: --> line 25
04/20/2020 04:35:11 PM: DEBUG: patientDictionaries: {'siimsally': {}, 'siimjoe': {'substances': ['ASPIRIN', 'Bicillin L-A']}} @ AllergiesJSONResponseClass.py : __init__: --> line 26
04/20/2020 04:35:11 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 04:35:11 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 04:35:11 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:11 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:12 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:12 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 04:35:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 04:35:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:12 PM: DEBUG: full url after initialization: http://hackathon.siim.org/fhir/Patient/ @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 04:35:12 PM: INFO: After initialization, toString(): apiEndpoint=http://hackathon.siim.org/fhir, requestType=GET, resource=Patient, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 04:35:12 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 04:35:12 PM: DEBUG: Setting identifiers dictionary as {'_id': 'siimjoe'}:  @ HTTPRequestClass.py : setIdentifiersDict: --> line 59
04/20/2020 04:35:12 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: Patient @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 04:35:12 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 04:35:12 PM: DEBUG: identifiersDict.items(): dict_items([('_id', 'siimjoe')]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 04:35:12 PM: DEBUG: url appended: http://hackathon.siim.org/fhir/Patient/?_id=siimjoe& @ HTTPRequestClass.py : constructRequestUrl: --> line 106
04/20/2020 04:35:12 PM: INFO: Removed trailing & character: %s @ HTTPRequestClass.py : constructRequestUrl: --> line 112
04/20/2020 04:35:12 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 113
04/20/2020 04:35:12 PM: DEBUG: url returned http://hackathon.siim.org/fhir/Patient/?_id=siimjoe @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 04:35:12 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 04:35:12 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 04:35:12 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 04:35:12 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/Patient/?_id=siimjoe HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 04:35:12 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
04/20/2020 04:35:12 PM: INFO: Creating patient JSON Response Instance @ PatientJSONResponseClass.py : createPatientJSONResponse: --> line 127
04/20/2020 04:35:12 PM: ERROR: Could not parse entries from JSON response @ PatientJSONResponseClass.py : getPatientEntriesFromResponse: --> line 51
04/20/2020 04:35:12 PM: DEBUG: Patient entries: [{'fullUrl': 'http://hackathon.siim.org/fhir-overview/fhir/Patient/siimjoe', 'resource': {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}}, 'search': {'mode': 'match'}, 'response': {'status': '201 Created', 'etag': 'W/"1"'}}] @ PatientJSONResponseClass.py : getPatientEntries: --> line 33
04/20/2020 04:35:12 PM: DEBUG: resource: {'resourceType': 'Patient', 'id': 'siimjoe', 'meta': {'versionId': '1', 'lastUpdated': '2020-04-20T03:00:36.150-04:00'}, 'text': {'status': 'generated', 'div': '<div xmlns="http://www.w3.org/1999/xhtml">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>Jim <b>SIIM</b></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Address</td>\r\n        <td>534 Erewhon, Pleasantville, Vic, 3999</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Contacts</td>\r\n        <td>Home: unknown. Work: (03) 5555 6473</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Id</td>\r\n        <td>MRN: TCGA-17-Z058 (TCIA)</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>'}, 'identifier': [{'use': 'usual', 'system': 'http://www.siim.org/', 'value': 'TCGA-17-Z058', 'assigner': {'display': 'TCIA'}}], 'active': True, 'name': [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}], 'telecom': [{'use': 'home'}, {'system': 'phone', 'value': '(035) 555 6473', 'use': 'work'}], 'gender': 'male', 'birthDate': '1926-03-30', 'deceasedBoolean': False, 'address': [{'use': 'home', 'line': ['534 Erewhon St'], 'city': 'PleasantVille', 'state': 'Vic', 'postalCode': '3999'}], 'contact': [{'relationship': [{'coding': [{'system': 'http://hl7.org/fhir/patient-contact-relationship', 'code': 'partner'}]}], 'name': {'family': 'du', '_family': {'extension': [{'url': 'http://hl7.org/fhir/Profile/iso-21090#qualifier', 'valueCode': 'VV'}]}, 'given': ['Bénédicte']}, 'telecom': [{'system': 'phone', 'value': '+33 (237) 998327'}]}], 'managingOrganization': {'reference': 'Organization/siim'}} @ PatientJSONResponseClass.py : parseResource: --> line 75
04/20/2020 04:35:12 PM: DEBUG: nameList parsed: [{'use': 'official', 'family': 'SIIM ', 'given': ['Joe']}, {'use': 'usual', 'given': ['Joe']}] @ PatientJSONResponseClass.py : parseResource: --> line 80
04/20/2020 04:35:12 PM: DEBUG: address: 534 Erewhon St @ PatientJSONResponseClass.py : parseResource: --> line 88
04/20/2020 04:35:12 PM: DEBUG: date of birth parsed: 1926-03-30 @ PatientJSONResponseClass.py : parseResource: --> line 98
04/20/2020 04:35:12 PM: DEBUG: gender parsed: male @ PatientJSONResponseClass.py : parseResource: --> line 99
04/20/2020 04:35:12 PM: DEBUG: Parsed resource from response into dict {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'} @ PatientJSONResponseClass.py : parseResource: --> line 113
04/20/2020 04:35:12 PM: INFO: Created PatientJSONResponse object @ PatientJSONResponseClass.py : __init__: --> line 19
04/20/2020 04:35:12 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : __init__: --> line 20
04/20/2020 04:35:12 PM: DEBUG: patientDictionaries: {'siimjoe': {'given': 'Joe', 'family': 'SIIM ', 'address': '534 Erewhon St', 'birthtime': '1926-03-30', 'gender': 'male', 'state': 'Vic', 'city': 'PleasantVille', 'postalcode': '3999'}} @ PatientJSONResponseClass.py : getPatientDictionaries: --> line 41
04/20/2020 04:35:12 PM: DEBUG: Number of patient entries from GET Response: 1 @ PatientJSONResponseClass.py : getNumberOfPatientEntries: --> line 37
04/20/2020 05:27:08 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 05:27:08 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 05:27:08 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 05:27:08 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 05:27:08 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:08 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:27:08 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:27:08 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:08 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 05:27:08 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=POST, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 05:27:08 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 05:27:08 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 05:27:08 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 05:27:08 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:08 PM: DEBUG: Lowercase request type: post @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:27:08 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:27:08 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:08 PM: INFO: Lowercase request type parameter: post @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:27:08 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:27:08 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:27:08 PM: DEBUG: http://hackathon.siim.org:80 "POST /fhir/AllergyIntolerance/ HTTP/1.1" 201 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:27:08 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 155
04/20/2020 05:27:08 PM: WARNING: No api endpoint specified as argument @ HTTPRequestClass.py : __init__: --> line 17
04/20/2020 05:27:08 PM: DEBUG: No resource specified as argument @ HTTPRequestClass.py : __init__: --> line 22
04/20/2020 05:27:08 PM: DEBUG: No headers dictionary specified as argument @ HTTPRequestClass.py : __init__: --> line 27
04/20/2020 05:27:08 PM: WARNING: No identifiers specified @ HTTPRequestClass.py : __init__: --> line 32
04/20/2020 05:27:08 PM: DEBUG: api endpoint:  , resource:  @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:08 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:08 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:27:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:27:08 PM: DEBUG: New Url after removing trailing characters // @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:27:08 PM: DEBUG: url returned // @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:08 PM: DEBUG: full url after initialization: // @ HTTPRequestClass.py : __init__: --> line 38
04/20/2020 05:27:08 PM: INFO: After initialization, toString(): apiEndpoint=, requestType=GET, resource=, headersDict={}, identifiersDict={} @ HTTPRequestClass.py : __init__: --> line 39
04/20/2020 05:27:08 PM: DEBUG: In set API Endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 42
04/20/2020 05:27:08 PM: DEBUG: New endpoint: http://hackathon.siim.org/fhir @ HTTPRequestClass.py : setApiEndpoint: --> line 44
04/20/2020 05:27:08 PM: INFO: Setting API Key @ HTTPRequestClass.py : setApiKey: --> line 46
04/20/2020 05:27:08 PM: DEBUG: api endpoint: http://hackathon.siim.org/fhir , resource: AllergyIntolerance @ HTTPRequestClass.py : constructRequestUrl: --> line 91
04/20/2020 05:27:08 PM: DEBUG: Lowercase request type: get @ HTTPRequestClass.py : constructRequestUrl: --> line 94
04/20/2020 05:27:08 PM: DEBUG: identifiersDict.items(): dict_items([]) @ HTTPRequestClass.py : constructRequestUrl: --> line 97
04/20/2020 05:27:08 PM: INFO: Removed trailing ? character @ HTTPRequestClass.py : constructRequestUrl: --> line 116
04/20/2020 05:27:08 PM: DEBUG: New Url after removing trailing characters http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 117
04/20/2020 05:27:08 PM: DEBUG: url returned http://hackathon.siim.org/fhir/AllergyIntolerance/ @ HTTPRequestClass.py : constructRequestUrl: --> line 118
04/20/2020 05:27:08 PM: INFO: Lowercase request type parameter: get @ HTTPRequestClass.py : executeRequest: --> line 143
04/20/2020 05:27:08 PM: INFO: Added apikey to header dictionary @ HTTPRequestClass.py : executeRequest: --> line 148
04/20/2020 05:27:08 PM: DEBUG: Starting new HTTP connection (1): hackathon.siim.org:80 @ connectionpool.py : _new_conn: --> line 225
04/20/2020 05:27:08 PM: DEBUG: http://hackathon.siim.org:80 "GET /fhir/AllergyIntolerance/ HTTP/1.1" 200 None @ connectionpool.py : _make_request: --> line 437
04/20/2020 05:27:08 PM: INFO: GET Request response generated @ HTTPRequestClass.py : executeRequest: --> line 151
